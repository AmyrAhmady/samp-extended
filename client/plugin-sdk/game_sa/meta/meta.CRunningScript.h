/*
    Plugin-SDK (Grand Theft Auto San Andreas) header file
    Authors: GTA Community. See more here
    https://github.com/DK22Pac/plugin-sdk
    Do not delete this comment block. Respect others' work!
*/
#include "PluginBase.h"

namespace plugin {

META_BEGIN(CRunningScript::GetPointerToLocalVariable)
    static int address;
    static int global_address;
    static const int id = 0x463CA0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x463CA0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x463DD7, GAME_10US_COMPACT, H_CALL, 0x463D50, 1,
        0x464011, GAME_10US_COMPACT, H_CALL, 0x463D50, 2,
        0x4642B9, GAME_10US_COMPACT, H_CALL, 0x464250, 1>;
    using def_t = void *(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::GetPointerToLocalArrayElement)
    static int address;
    static int global_address;
    static const int id = 0x463CC0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x463CC0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x463E96, GAME_10US_COMPACT, H_CALL, 0x463D50, 1,
        0x463EB6, GAME_10US_COMPACT, H_CALL, 0x463D50, 2,
        0x46433E, GAME_10US_COMPACT, H_CALL, 0x464250, 1,
        0x46489B, GAME_10US_COMPACT, H_CALL, 0x464790, 1>;
    using def_t = void *(CRunningScript *, int, unsigned short, unsigned char);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int,unsigned short,unsigned char>, 0,1,2,3>;
META_END

META_BEGIN(CRunningScript::ReadArrayInformation)
    static int address;
    static int global_address;
    static const int id = 0x463CF0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x463CF0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x463DED, GAME_10US_COMPACT, H_CALL, 0x463D50, 1,
        0x463E7D, GAME_10US_COMPACT, H_CALL, 0x463D50, 2,
        0x464302, GAME_10US_COMPACT, H_CALL, 0x464250, 1,
        0x46432C, GAME_10US_COMPACT, H_CALL, 0x464250, 2,
        0x464814, GAME_10US_COMPACT, H_CALL, 0x464790, 1,
        0x464877, GAME_10US_COMPACT, H_CALL, 0x464790, 2>;
    using def_t = void(CRunningScript *, int, unsigned short *, int *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int,unsigned short *,int *>, 0,1,2,3>;
META_END

META_BEGIN(CRunningScript::ReadTextLabelFromScript)
    static int address;
    static int global_address;
    static const int id = 0x463D50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x463D50, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x468084, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x4680D8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 2,
        0x468164, GAME_10US_COMPACT, H_CALL, 0x466DE0, 3,
        0x46AFF5, GAME_10US_COMPACT, H_CALL, 0x46AF50, 1,
        0x46B003, GAME_10US_COMPACT, H_CALL, 0x46AF50, 2,
        0x46B4C7, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46B520, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x46B6DD, GAME_10US_COMPACT, H_CALL, 0x46B460, 3,
        0x46B705, GAME_10US_COMPACT, H_CALL, 0x46B460, 4,
        0x46B72D, GAME_10US_COMPACT, H_CALL, 0x46B460, 5,
        0x46D6C0, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x46E96D, GAME_10US_COMPACT, H_CALL, 0x46D050, 2,
        0x46E97B, GAME_10US_COMPACT, H_CALL, 0x46D050, 3,
        0x46EA25, GAME_10US_COMPACT, H_CALL, 0x46D050, 4,
        0x46EA33, GAME_10US_COMPACT, H_CALL, 0x46D050, 5,
        0x46EB40, GAME_10US_COMPACT, H_CALL, 0x46D050, 6,
        0x46EB62, GAME_10US_COMPACT, H_CALL, 0x46D050, 7,
        0x46ECAB, GAME_10US_COMPACT, H_CALL, 0x46D050, 8,
        0x46ED0E, GAME_10US_COMPACT, H_CALL, 0x46D050, 9,
        0x46ED58, GAME_10US_COMPACT, H_CALL, 0x46D050, 10,
        0x47018E, GAME_10US_COMPACT, H_CALL, 0x470150, 1,
        0x47019C, GAME_10US_COMPACT, H_CALL, 0x470150, 2,
        0x470B55, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x470BB9, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x470C35, GAME_10US_COMPACT, H_CALL, 0x470A90, 3,
        0x470CAA, GAME_10US_COMPACT, H_CALL, 0x470A90, 4,
        0x4718B5, GAME_10US_COMPACT, H_CALL, 0x470A90, 5,
        0x471A97, GAME_10US_COMPACT, H_CALL, 0x470A90, 6,
        0x471AA8, GAME_10US_COMPACT, H_CALL, 0x470A90, 7,
        0x471CC0, GAME_10US_COMPACT, H_CALL, 0x470A90, 8,
        0x47239C, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x4730B1, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x473106, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x473410, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x473421, GAME_10US_COMPACT, H_CALL, 0x472310, 5,
        0x47366D, GAME_10US_COMPACT, H_CALL, 0x472310, 6,
        0x4741C6, GAME_10US_COMPACT, H_CALL, 0x472310, 7,
        0x4741D7, GAME_10US_COMPACT, H_CALL, 0x472310, 8,
        0x474C56, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x475216, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x475509, GAME_10US_COMPACT, H_CALL, 0x474900, 3,
        0x4756DB, GAME_10US_COMPACT, H_CALL, 0x474900, 4,
        0x47571B, GAME_10US_COMPACT, H_CALL, 0x474900, 5,
        0x47578C, GAME_10US_COMPACT, H_CALL, 0x474900, 6,
        0x475C0B, GAME_10US_COMPACT, H_CALL, 0x474900, 7,
        0x475E08, GAME_10US_COMPACT, H_CALL, 0x474900, 8,
        0x475E82, GAME_10US_COMPACT, H_CALL, 0x474900, 9,
        0x475E93, GAME_10US_COMPACT, H_CALL, 0x474900, 10,
        0x4760C6, GAME_10US_COMPACT, H_CALL, 0x474900, 11,
        0x47661B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1,
        0x476819, GAME_10US_COMPACT, H_CALL, 0x4762D0, 2,
        0x47692B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 3,
        0x477050, GAME_10US_COMPACT, H_CALL, 0x4762D0, 4,
        0x477242, GAME_10US_COMPACT, H_CALL, 0x4762D0, 5,
        0x4780DA, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x478D70, GAME_10US_COMPACT, H_CALL, 0x478000, 2,
        0x4791A7, GAME_10US_COMPACT, H_CALL, 0x478000, 3,
        0x4791B5, GAME_10US_COMPACT, H_CALL, 0x478000, 4,
        0x4791C3, GAME_10US_COMPACT, H_CALL, 0x478000, 5,
        0x4792BB, GAME_10US_COMPACT, H_CALL, 0x478000, 6,
        0x4792EE, GAME_10US_COMPACT, H_CALL, 0x478000, 7,
        0x479616, GAME_10US_COMPACT, H_CALL, 0x478000, 8,
        0x479E7E, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x47A26A, GAME_10US_COMPACT, H_CALL, 0x479DA0, 2,
        0x47AF87, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x47B54C, GAME_10US_COMPACT, H_CALL, 0x47A760, 2,
        0x47B6F4, GAME_10US_COMPACT, H_CALL, 0x47A760, 3,
        0x47BA77, GAME_10US_COMPACT, H_CALL, 0x47A760, 4,
        0x47BA85, GAME_10US_COMPACT, H_CALL, 0x47A760, 5,
        0x47BA93, GAME_10US_COMPACT, H_CALL, 0x47A760, 6,
        0x47BAE2, GAME_10US_COMPACT, H_CALL, 0x47A760, 7,
        0x47C335, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47DA14, GAME_10US_COMPACT, H_CALL, 0x47D210, 1,
        0x47DA7A, GAME_10US_COMPACT, H_CALL, 0x47D210, 2,
        0x47DAF5, GAME_10US_COMPACT, H_CALL, 0x47D210, 3,
        0x47E26C, GAME_10US_COMPACT, H_CALL, 0x47E090, 1,
        0x47E743, GAME_10US_COMPACT, H_CALL, 0x47E090, 2,
        0x47E798, GAME_10US_COMPACT, H_CALL, 0x47E090, 3,
        0x47EDC8, GAME_10US_COMPACT, H_CALL, 0x47E090, 4,
        0x47EF27, GAME_10US_COMPACT, H_CALL, 0x47E090, 5,
        0x47F4BF, GAME_10US_COMPACT, H_CALL, 0x47F370, 1,
        0x47F97F, GAME_10US_COMPACT, H_CALL, 0x47F370, 2,
        0x4802D0, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1,
        0x480707, GAME_10US_COMPACT, H_CALL, 0x47FA30, 2,
        0x480A63, GAME_10US_COMPACT, H_CALL, 0x47FA30, 3,
        0x480AB7, GAME_10US_COMPACT, H_CALL, 0x47FA30, 4,
        0x480B2F, GAME_10US_COMPACT, H_CALL, 0x47FA30, 5,
        0x480B91, GAME_10US_COMPACT, H_CALL, 0x47FA30, 6,
        0x480BF8, GAME_10US_COMPACT, H_CALL, 0x47FA30, 7,
        0x480C79, GAME_10US_COMPACT, H_CALL, 0x47FA30, 8,
        0x480D81, GAME_10US_COMPACT, H_CALL, 0x47FA30, 9,
        0x481A1D, GAME_10US_COMPACT, H_CALL, 0x481300, 1,
        0x482E29, GAME_10US_COMPACT, H_CALL, 0x481300, 2,
        0x482E6C, GAME_10US_COMPACT, H_CALL, 0x481300, 3,
        0x4832C7, GAME_10US_COMPACT, H_CALL, 0x481300, 4,
        0x483C1A, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x483C39, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x48408A, GAME_10US_COMPACT, H_CALL, 0x483BD0, 3,
        0x4840FB, GAME_10US_COMPACT, H_CALL, 0x483BD0, 4,
        0x484273, GAME_10US_COMPACT, H_CALL, 0x483BD0, 5,
        0x4846AD, GAME_10US_COMPACT, H_CALL, 0x483BD0, 6,
        0x4847B6, GAME_10US_COMPACT, H_CALL, 0x483BD0, 7,
        0x4847ED, GAME_10US_COMPACT, H_CALL, 0x483BD0, 8,
        0x484C7F, GAME_10US_COMPACT, H_CALL, 0x483BD0, 9,
        0x484CCE, GAME_10US_COMPACT, H_CALL, 0x483BD0, 10,
        0x485388, GAME_10US_COMPACT, H_CALL, 0x483BD0, 11,
        0x4853B5, GAME_10US_COMPACT, H_CALL, 0x483BD0, 12,
        0x485601, GAME_10US_COMPACT, H_CALL, 0x483BD0, 13,
        0x48A50C, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48A5C7, GAME_10US_COMPACT, H_CALL, 0x48A320, 2,
        0x48A672, GAME_10US_COMPACT, H_CALL, 0x48A320, 3,
        0x48C35A, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48C39A, GAME_10US_COMPACT, H_CALL, 0x48B590, 2,
        0x48C3DE, GAME_10US_COMPACT, H_CALL, 0x48B590, 3,
        0x48C54A, GAME_10US_COMPACT, H_CALL, 0x48B590, 4,
        0x48C804, GAME_10US_COMPACT, H_CALL, 0x48B590, 5,
        0x48CB76, GAME_10US_COMPACT, H_CALL, 0x48B590, 6,
        0x48CBEB, GAME_10US_COMPACT, H_CALL, 0x48B590, 7,
        0x48CE4C, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 1,
        0x48CF2F, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 2,
        0x48D590, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 3,
        0x48EB69, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48F796, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48F7CC, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x48F806, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 4,
        0x4916F0, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x49174C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x4917BA, GAME_10US_COMPACT, H_CALL, 0x490DB0, 3,
        0x491828, GAME_10US_COMPACT, H_CALL, 0x490DB0, 4,
        0x491A13, GAME_10US_COMPACT, H_CALL, 0x490DB0, 5,
        0x494231, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x4947D9, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x4947F5, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x494811, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x494826, GAME_10US_COMPACT, H_CALL, 0x493FE0, 5,
        0x494A02, GAME_10US_COMPACT, H_CALL, 0x493FE0, 6,
        0x494A77, GAME_10US_COMPACT, H_CALL, 0x493FE0, 7,
        0x494B79, GAME_10US_COMPACT, H_CALL, 0x493FE0, 8,
        0x494BB5, GAME_10US_COMPACT, H_CALL, 0x493FE0, 9,
        0x494BF5, GAME_10US_COMPACT, H_CALL, 0x493FE0, 10,
        0x494CC1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 11,
        0x494EB6, GAME_10US_COMPACT, H_CALL, 0x493FE0, 12,
        0x497DFF, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x497E35, GAME_10US_COMPACT, H_CALL, 0x496E00, 2>;
    using def_t = void(CRunningScript *, char *, unsigned char);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,char *,unsigned char>, 0,1,2>;
META_END

META_BEGIN(CRunningScript::CollectParameters)
    static int address;
    static int global_address;
    static const int id = 0x464080;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464080, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x465E94, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x465EC5, GAME_10US_COMPACT, H_CALL, 0x465E60, 2,
        0x465EEF, GAME_10US_COMPACT, H_CALL, 0x465E60, 3,
        0x465F35, GAME_10US_COMPACT, H_CALL, 0x465E60, 4,
        0x465F65, GAME_10US_COMPACT, H_CALL, 0x465E60, 5,
        0x465F96, GAME_10US_COMPACT, H_CALL, 0x465E60, 6,
        0x465FCE, GAME_10US_COMPACT, H_CALL, 0x465E60, 7,
        0x465FF1, GAME_10US_COMPACT, H_CALL, 0x465E60, 8,
        0x466024, GAME_10US_COMPACT, H_CALL, 0x465E60, 9,
        0x46604B, GAME_10US_COMPACT, H_CALL, 0x465E60, 10,
        0x46607B, GAME_10US_COMPACT, H_CALL, 0x465E60, 11,
        0x46609C, GAME_10US_COMPACT, H_CALL, 0x465E60, 12,
        0x4660BF, GAME_10US_COMPACT, H_CALL, 0x465E60, 13,
        0x4660E0, GAME_10US_COMPACT, H_CALL, 0x465E60, 14,
        0x466118, GAME_10US_COMPACT, H_CALL, 0x465E60, 15,
        0x46613A, GAME_10US_COMPACT, H_CALL, 0x465E60, 16,
        0x46615B, GAME_10US_COMPACT, H_CALL, 0x465E60, 17,
        0x46617D, GAME_10US_COMPACT, H_CALL, 0x465E60, 18,
        0x46619E, GAME_10US_COMPACT, H_CALL, 0x465E60, 19,
        0x4661C0, GAME_10US_COMPACT, H_CALL, 0x465E60, 20,
        0x4661E1, GAME_10US_COMPACT, H_CALL, 0x465E60, 21,
        0x46621F, GAME_10US_COMPACT, H_CALL, 0x465E60, 22,
        0x466252, GAME_10US_COMPACT, H_CALL, 0x465E60, 23,
        0x46628C, GAME_10US_COMPACT, H_CALL, 0x465E60, 24,
        0x466329, GAME_10US_COMPACT, H_CALL, 0x465E60, 25,
        0x466361, GAME_10US_COMPACT, H_CALL, 0x465E60, 26,
        0x466391, GAME_10US_COMPACT, H_CALL, 0x465E60, 27,
        0x4663B3, GAME_10US_COMPACT, H_CALL, 0x465E60, 28,
        0x466451, GAME_10US_COMPACT, H_CALL, 0x465E60, 29,
        0x466476, GAME_10US_COMPACT, H_CALL, 0x465E60, 30,
        0x466491, GAME_10US_COMPACT, H_CALL, 0x465E60, 31,
        0x4664B3, GAME_10US_COMPACT, H_CALL, 0x465E60, 32,
        0x466520, GAME_10US_COMPACT, H_CALL, 0x465E60, 33,
        0x466546, GAME_10US_COMPACT, H_CALL, 0x465E60, 34,
        0x466561, GAME_10US_COMPACT, H_CALL, 0x465E60, 35,
        0x466579, GAME_10US_COMPACT, H_CALL, 0x465E60, 36,
        0x466642, GAME_10US_COMPACT, H_CALL, 0x465E60, 37,
        0x466667, GAME_10US_COMPACT, H_CALL, 0x465E60, 38,
        0x4666DE, GAME_10US_COMPACT, H_CALL, 0x465E60, 39,
        0x4666FC, GAME_10US_COMPACT, H_CALL, 0x465E60, 40,
        0x4667A7, GAME_10US_COMPACT, H_CALL, 0x465E60, 41,
        0x466822, GAME_10US_COMPACT, H_CALL, 0x465E60, 42,
        0x466864, GAME_10US_COMPACT, H_CALL, 0x465E60, 43,
        0x4668C2, GAME_10US_COMPACT, H_CALL, 0x465E60, 44,
        0x4668E2, GAME_10US_COMPACT, H_CALL, 0x465E60, 45,
        0x467168, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x4671F2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 2,
        0x467553, GAME_10US_COMPACT, H_CALL, 0x466DE0, 3,
        0x46778D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 4,
        0x4677E6, GAME_10US_COMPACT, H_CALL, 0x466DE0, 5,
        0x467879, GAME_10US_COMPACT, H_CALL, 0x466DE0, 6,
        0x4678C9, GAME_10US_COMPACT, H_CALL, 0x466DE0, 7,
        0x4679AA, GAME_10US_COMPACT, H_CALL, 0x466DE0, 8,
        0x467AB7, GAME_10US_COMPACT, H_CALL, 0x466DE0, 9,
        0x467B1E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 10,
        0x467B87, GAME_10US_COMPACT, H_CALL, 0x466DE0, 11,
        0x467C87, GAME_10US_COMPACT, H_CALL, 0x466DE0, 12,
        0x467D03, GAME_10US_COMPACT, H_CALL, 0x466DE0, 13,
        0x467D4C, GAME_10US_COMPACT, H_CALL, 0x466DE0, 14,
        0x467DB9, GAME_10US_COMPACT, H_CALL, 0x466DE0, 15,
        0x467E09, GAME_10US_COMPACT, H_CALL, 0x466DE0, 16,
        0x467E89, GAME_10US_COMPACT, H_CALL, 0x466DE0, 17,
        0x467EC5, GAME_10US_COMPACT, H_CALL, 0x466DE0, 18,
        0x467F1F, GAME_10US_COMPACT, H_CALL, 0x466DE0, 19,
        0x467FC1, GAME_10US_COMPACT, H_CALL, 0x466DE0, 20,
        0x46809E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 21,
        0x4680F2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 22,
        0x46817E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 23,
        0x46823C, GAME_10US_COMPACT, H_CALL, 0x466DE0, 24,
        0x468276, GAME_10US_COMPACT, H_CALL, 0x466DE0, 25,
        0x4682BB, GAME_10US_COMPACT, H_CALL, 0x466DE0, 26,
        0x4693D3, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x46943E, GAME_10US_COMPACT, H_CALL, 0x469390, 2,
        0x469481, GAME_10US_COMPACT, H_CALL, 0x469390, 3,
        0x4695AD, GAME_10US_COMPACT, H_CALL, 0x469390, 4,
        0x469612, GAME_10US_COMPACT, H_CALL, 0x469390, 5,
        0x46966B, GAME_10US_COMPACT, H_CALL, 0x469390, 6,
        0x4696BC, GAME_10US_COMPACT, H_CALL, 0x469390, 7,
        0x469719, GAME_10US_COMPACT, H_CALL, 0x469390, 8,
        0x469773, GAME_10US_COMPACT, H_CALL, 0x469390, 9,
        0x4698C6, GAME_10US_COMPACT, H_CALL, 0x469390, 10,
        0x469926, GAME_10US_COMPACT, H_CALL, 0x469390, 11,
        0x469952, GAME_10US_COMPACT, H_CALL, 0x469390, 12,
        0x46998E, GAME_10US_COMPACT, H_CALL, 0x469390, 13,
        0x4699BF, GAME_10US_COMPACT, H_CALL, 0x469390, 14,
        0x4699EC, GAME_10US_COMPACT, H_CALL, 0x469390, 15,
        0x469A19, GAME_10US_COMPACT, H_CALL, 0x469390, 16,
        0x469A56, GAME_10US_COMPACT, H_CALL, 0x469390, 17,
        0x469A7F, GAME_10US_COMPACT, H_CALL, 0x469390, 18,
        0x469AAC, GAME_10US_COMPACT, H_CALL, 0x469390, 19,
        0x469AE2, GAME_10US_COMPACT, H_CALL, 0x469390, 20,
        0x469B17, GAME_10US_COMPACT, H_CALL, 0x469390, 21,
        0x469B71, GAME_10US_COMPACT, H_CALL, 0x469390, 22,
        0x469BD5, GAME_10US_COMPACT, H_CALL, 0x469390, 23,
        0x469C3E, GAME_10US_COMPACT, H_CALL, 0x469390, 24,
        0x46AF70, GAME_10US_COMPACT, H_CALL, 0x46AF50, 1,
        0x46B038, GAME_10US_COMPACT, H_CALL, 0x46AF50, 2,
        0x46B4D0, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46B529, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x46B59B, GAME_10US_COMPACT, H_CALL, 0x46B460, 3,
        0x46B5EC, GAME_10US_COMPACT, H_CALL, 0x46B460, 4,
        0x46B634, GAME_10US_COMPACT, H_CALL, 0x46B460, 5,
        0x46B750, GAME_10US_COMPACT, H_CALL, 0x46B460, 6,
        0x46B795, GAME_10US_COMPACT, H_CALL, 0x46B460, 7,
        0x46B7DB, GAME_10US_COMPACT, H_CALL, 0x46B460, 8,
        0x46B810, GAME_10US_COMPACT, H_CALL, 0x46B460, 9,
        0x46B8AA, GAME_10US_COMPACT, H_CALL, 0x46B460, 10,
        0x46B964, GAME_10US_COMPACT, H_CALL, 0x46B460, 11,
        0x46B996, GAME_10US_COMPACT, H_CALL, 0x46B460, 12,
        0x46B9C9, GAME_10US_COMPACT, H_CALL, 0x46B460, 13,
        0x46B9FC, GAME_10US_COMPACT, H_CALL, 0x46B460, 14,
        0x46BA37, GAME_10US_COMPACT, H_CALL, 0x46B460, 15,
        0x46BB14, GAME_10US_COMPACT, H_CALL, 0x46B460, 16,
        0x46BB43, GAME_10US_COMPACT, H_CALL, 0x46B460, 17,
        0x46BB6C, GAME_10US_COMPACT, H_CALL, 0x46B460, 18,
        0x46BBD7, GAME_10US_COMPACT, H_CALL, 0x46B460, 19,
        0x46BC34, GAME_10US_COMPACT, H_CALL, 0x46B460, 20,
        0x46BC69, GAME_10US_COMPACT, H_CALL, 0x46B460, 21,
        0x46BCCA, GAME_10US_COMPACT, H_CALL, 0x46B460, 22,
        0x46BCEA, GAME_10US_COMPACT, H_CALL, 0x46B460, 23,
        0x46BD31, GAME_10US_COMPACT, H_CALL, 0x46B460, 24,
        0x46BD69, GAME_10US_COMPACT, H_CALL, 0x46B460, 25,
        0x46BD98, GAME_10US_COMPACT, H_CALL, 0x46B460, 26,
        0x46BE34, GAME_10US_COMPACT, H_CALL, 0x46B460, 27,
        0x46BEA4, GAME_10US_COMPACT, H_CALL, 0x46B460, 28,
        0x46BF3D, GAME_10US_COMPACT, H_CALL, 0x46B460, 29,
        0x46BF57, GAME_10US_COMPACT, H_CALL, 0x46B460, 30,
        0x46BFDC, GAME_10US_COMPACT, H_CALL, 0x46B460, 31,
        0x46C053, GAME_10US_COMPACT, H_CALL, 0x46B460, 32,
        0x46C0B3, GAME_10US_COMPACT, H_CALL, 0x46B460, 33,
        0x46C14D, GAME_10US_COMPACT, H_CALL, 0x46B460, 34,
        0x46C1AB, GAME_10US_COMPACT, H_CALL, 0x46B460, 35,
        0x46C1CB, GAME_10US_COMPACT, H_CALL, 0x46B460, 36,
        0x46C232, GAME_10US_COMPACT, H_CALL, 0x46B460, 37,
        0x46C2B3, GAME_10US_COMPACT, H_CALL, 0x46B460, 38,
        0x46C338, GAME_10US_COMPACT, H_CALL, 0x46B460, 39,
        0x46C3A6, GAME_10US_COMPACT, H_CALL, 0x46B460, 40,
        0x46C4BB, GAME_10US_COMPACT, H_CALL, 0x46B460, 41,
        0x46C507, GAME_10US_COMPACT, H_CALL, 0x46B460, 42,
        0x46C556, GAME_10US_COMPACT, H_CALL, 0x46B460, 43,
        0x46C584, GAME_10US_COMPACT, H_CALL, 0x46B460, 44,
        0x46C619, GAME_10US_COMPACT, H_CALL, 0x46B460, 45,
        0x46C64B, GAME_10US_COMPACT, H_CALL, 0x46B460, 46,
        0x46C67E, GAME_10US_COMPACT, H_CALL, 0x46B460, 47,
        0x46C6A5, GAME_10US_COMPACT, H_CALL, 0x46B460, 48,
        0x46C6C4, GAME_10US_COMPACT, H_CALL, 0x46B460, 49,
        0x46C6E8, GAME_10US_COMPACT, H_CALL, 0x46B460, 50,
        0x46C74B, GAME_10US_COMPACT, H_CALL, 0x46B460, 51,
        0x46C7FB, GAME_10US_COMPACT, H_CALL, 0x46B460, 52,
        0x46C85E, GAME_10US_COMPACT, H_CALL, 0x46B460, 53,
        0x46C92C, GAME_10US_COMPACT, H_CALL, 0x46B460, 54,
        0x46C98C, GAME_10US_COMPACT, H_CALL, 0x46B460, 55,
        0x46C9F6, GAME_10US_COMPACT, H_CALL, 0x46B460, 56,
        0x46CA40, GAME_10US_COMPACT, H_CALL, 0x46B460, 57,
        0x46CA8C, GAME_10US_COMPACT, H_CALL, 0x46B460, 58,
        0x46D092, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x46D0D7, GAME_10US_COMPACT, H_CALL, 0x46D050, 2,
        0x46D179, GAME_10US_COMPACT, H_CALL, 0x46D050, 3,
        0x46D1DF, GAME_10US_COMPACT, H_CALL, 0x46D050, 4,
        0x46D21E, GAME_10US_COMPACT, H_CALL, 0x46D050, 5,
        0x46D24F, GAME_10US_COMPACT, H_CALL, 0x46D050, 6,
        0x46D294, GAME_10US_COMPACT, H_CALL, 0x46D050, 7,
        0x46D308, GAME_10US_COMPACT, H_CALL, 0x46D050, 8,
        0x46D3AB, GAME_10US_COMPACT, H_CALL, 0x46D050, 9,
        0x46D4FE, GAME_10US_COMPACT, H_CALL, 0x46D050, 10,
        0x46D549, GAME_10US_COMPACT, H_CALL, 0x46D050, 11,
        0x46D573, GAME_10US_COMPACT, H_CALL, 0x46D050, 12,
        0x46D662, GAME_10US_COMPACT, H_CALL, 0x46D050, 13,
        0x46D69E, GAME_10US_COMPACT, H_CALL, 0x46D050, 14,
        0x46D6F8, GAME_10US_COMPACT, H_CALL, 0x46D050, 15,
        0x46D722, GAME_10US_COMPACT, H_CALL, 0x46D050, 16,
        0x46D758, GAME_10US_COMPACT, H_CALL, 0x46D050, 17,
        0x46D8AB, GAME_10US_COMPACT, H_CALL, 0x46D050, 18,
        0x46D8F7, GAME_10US_COMPACT, H_CALL, 0x46D050, 19,
        0x46D998, GAME_10US_COMPACT, H_CALL, 0x46D050, 20,
        0x46DA39, GAME_10US_COMPACT, H_CALL, 0x46D050, 21,
        0x46DAEC, GAME_10US_COMPACT, H_CALL, 0x46D050, 22,
        0x46DB61, GAME_10US_COMPACT, H_CALL, 0x46D050, 23,
        0x46DBED, GAME_10US_COMPACT, H_CALL, 0x46D050, 24,
        0x46DC30, GAME_10US_COMPACT, H_CALL, 0x46D050, 25,
        0x46DCB1, GAME_10US_COMPACT, H_CALL, 0x46D050, 26,
        0x46DCF4, GAME_10US_COMPACT, H_CALL, 0x46D050, 27,
        0x46DD7A, GAME_10US_COMPACT, H_CALL, 0x46D050, 28,
        0x46DD99, GAME_10US_COMPACT, H_CALL, 0x46D050, 29,
        0x46DDCE, GAME_10US_COMPACT, H_CALL, 0x46D050, 30,
        0x46DE12, GAME_10US_COMPACT, H_CALL, 0x46D050, 31,
        0x46DE42, GAME_10US_COMPACT, H_CALL, 0x46D050, 32,
        0x46DF7E, GAME_10US_COMPACT, H_CALL, 0x46D050, 33,
        0x46DFC9, GAME_10US_COMPACT, H_CALL, 0x46D050, 34,
        0x46E00D, GAME_10US_COMPACT, H_CALL, 0x46D050, 35,
        0x46E176, GAME_10US_COMPACT, H_CALL, 0x46D050, 36,
        0x46E34C, GAME_10US_COMPACT, H_CALL, 0x46D050, 37,
        0x46E37E, GAME_10US_COMPACT, H_CALL, 0x46D050, 38,
        0x46E3AC, GAME_10US_COMPACT, H_CALL, 0x46D050, 39,
        0x46E415, GAME_10US_COMPACT, H_CALL, 0x46D050, 40,
        0x46E454, GAME_10US_COMPACT, H_CALL, 0x46D050, 41,
        0x46E486, GAME_10US_COMPACT, H_CALL, 0x46D050, 42,
        0x46E4B8, GAME_10US_COMPACT, H_CALL, 0x46D050, 43,
        0x46E4CF, GAME_10US_COMPACT, H_CALL, 0x46D050, 44,
        0x46E562, GAME_10US_COMPACT, H_CALL, 0x46D050, 45,
        0x46E679, GAME_10US_COMPACT, H_CALL, 0x46D050, 46,
        0x46E703, GAME_10US_COMPACT, H_CALL, 0x46D050, 47,
        0x46E780, GAME_10US_COMPACT, H_CALL, 0x46D050, 48,
        0x46E7C0, GAME_10US_COMPACT, H_CALL, 0x46D050, 49,
        0x46E806, GAME_10US_COMPACT, H_CALL, 0x46D050, 50,
        0x46E84E, GAME_10US_COMPACT, H_CALL, 0x46D050, 51,
        0x46E91E, GAME_10US_COMPACT, H_CALL, 0x46D050, 52,
        0x46E93F, GAME_10US_COMPACT, H_CALL, 0x46D050, 53,
        0x46EA00, GAME_10US_COMPACT, H_CALL, 0x46D050, 54,
        0x46EA3C, GAME_10US_COMPACT, H_CALL, 0x46D050, 55,
        0x46EAEB, GAME_10US_COMPACT, H_CALL, 0x46D050, 56,
        0x46EB07, GAME_10US_COMPACT, H_CALL, 0x46D050, 57,
        0x46EB9B, GAME_10US_COMPACT, H_CALL, 0x46D050, 58,
        0x46EBB3, GAME_10US_COMPACT, H_CALL, 0x46D050, 59,
        0x46EBDF, GAME_10US_COMPACT, H_CALL, 0x46D050, 60,
        0x46EC47, GAME_10US_COMPACT, H_CALL, 0x46D050, 61,
        0x46ECB4, GAME_10US_COMPACT, H_CALL, 0x46D050, 62,
        0x46ED17, GAME_10US_COMPACT, H_CALL, 0x46D050, 63,
        0x470177, GAME_10US_COMPACT, H_CALL, 0x470150, 1,
        0x4701C7, GAME_10US_COMPACT, H_CALL, 0x470150, 2,
        0x4701F0, GAME_10US_COMPACT, H_CALL, 0x470150, 3,
        0x470AD2, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x470B30, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x470B74, GAME_10US_COMPACT, H_CALL, 0x470A90, 3,
        0x470B95, GAME_10US_COMPACT, H_CALL, 0x470A90, 4,
        0x470C10, GAME_10US_COMPACT, H_CALL, 0x470A90, 5,
        0x470C85, GAME_10US_COMPACT, H_CALL, 0x470A90, 6,
        0x470CC9, GAME_10US_COMPACT, H_CALL, 0x470A90, 7,
        0x470CF8, GAME_10US_COMPACT, H_CALL, 0x470A90, 8,
        0x470D53, GAME_10US_COMPACT, H_CALL, 0x470A90, 9,
        0x470DAE, GAME_10US_COMPACT, H_CALL, 0x470A90, 10,
        0x470E19, GAME_10US_COMPACT, H_CALL, 0x470A90, 11,
        0x470E5F, GAME_10US_COMPACT, H_CALL, 0x470A90, 12,
        0x470E8A, GAME_10US_COMPACT, H_CALL, 0x470A90, 13,
        0x470EB8, GAME_10US_COMPACT, H_CALL, 0x470A90, 14,
        0x470EDD, GAME_10US_COMPACT, H_CALL, 0x470A90, 15,
        0x470F7B, GAME_10US_COMPACT, H_CALL, 0x470A90, 16,
        0x470FAE, GAME_10US_COMPACT, H_CALL, 0x470A90, 17,
        0x470FF9, GAME_10US_COMPACT, H_CALL, 0x470A90, 18,
        0x471060, GAME_10US_COMPACT, H_CALL, 0x470A90, 19,
        0x471165, GAME_10US_COMPACT, H_CALL, 0x470A90, 20,
        0x4711AF, GAME_10US_COMPACT, H_CALL, 0x470A90, 21,
        0x4711DD, GAME_10US_COMPACT, H_CALL, 0x470A90, 22,
        0x47125E, GAME_10US_COMPACT, H_CALL, 0x470A90, 23,
        0x4712AF, GAME_10US_COMPACT, H_CALL, 0x470A90, 24,
        0x4712E3, GAME_10US_COMPACT, H_CALL, 0x470A90, 25,
        0x47134F, GAME_10US_COMPACT, H_CALL, 0x470A90, 26,
        0x4713B9, GAME_10US_COMPACT, H_CALL, 0x470A90, 27,
        0x471474, GAME_10US_COMPACT, H_CALL, 0x470A90, 28,
        0x4714A9, GAME_10US_COMPACT, H_CALL, 0x470A90, 29,
        0x471508, GAME_10US_COMPACT, H_CALL, 0x470A90, 30,
        0x471532, GAME_10US_COMPACT, H_CALL, 0x470A90, 31,
        0x4715BC, GAME_10US_COMPACT, H_CALL, 0x470A90, 32,
        0x47173E, GAME_10US_COMPACT, H_CALL, 0x470A90, 33,
        0x471778, GAME_10US_COMPACT, H_CALL, 0x470A90, 34,
        0x4717D0, GAME_10US_COMPACT, H_CALL, 0x470A90, 35,
        0x47188E, GAME_10US_COMPACT, H_CALL, 0x470A90, 36,
        0x4718BE, GAME_10US_COMPACT, H_CALL, 0x470A90, 37,
        0x47191A, GAME_10US_COMPACT, H_CALL, 0x470A90, 38,
        0x471962, GAME_10US_COMPACT, H_CALL, 0x470A90, 39,
        0x471A04, GAME_10US_COMPACT, H_CALL, 0x470A90, 40,
        0x471A31, GAME_10US_COMPACT, H_CALL, 0x470A90, 41,
        0x471A74, GAME_10US_COMPACT, H_CALL, 0x470A90, 42,
        0x471AB1, GAME_10US_COMPACT, H_CALL, 0x470A90, 43,
        0x471B02, GAME_10US_COMPACT, H_CALL, 0x470A90, 44,
        0x471B53, GAME_10US_COMPACT, H_CALL, 0x470A90, 45,
        0x471BA4, GAME_10US_COMPACT, H_CALL, 0x470A90, 46,
        0x471BF5, GAME_10US_COMPACT, H_CALL, 0x470A90, 47,
        0x471C40, GAME_10US_COMPACT, H_CALL, 0x470A90, 48,
        0x471C93, GAME_10US_COMPACT, H_CALL, 0x470A90, 49,
        0x471CED, GAME_10US_COMPACT, H_CALL, 0x470A90, 50,
        0x471D2F, GAME_10US_COMPACT, H_CALL, 0x470A90, 51,
        0x471D7E, GAME_10US_COMPACT, H_CALL, 0x470A90, 52,
        0x471E1F, GAME_10US_COMPACT, H_CALL, 0x470A90, 53,
        0x471EA9, GAME_10US_COMPACT, H_CALL, 0x470A90, 54,
        0x471EEC, GAME_10US_COMPACT, H_CALL, 0x470A90, 55,
        0x47209B, GAME_10US_COMPACT, H_CALL, 0x470A90, 56,
        0x4720BF, GAME_10US_COMPACT, H_CALL, 0x470A90, 57,
        0x472104, GAME_10US_COMPACT, H_CALL, 0x470A90, 58,
        0x47236E, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x4723CA, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x47257A, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x47267B, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x47275D, GAME_10US_COMPACT, H_CALL, 0x472310, 5,
        0x47278A, GAME_10US_COMPACT, H_CALL, 0x472310, 6,
        0x4727B8, GAME_10US_COMPACT, H_CALL, 0x472310, 7,
        0x472849, GAME_10US_COMPACT, H_CALL, 0x472310, 8,
        0x472870, GAME_10US_COMPACT, H_CALL, 0x472310, 9,
        0x472936, GAME_10US_COMPACT, H_CALL, 0x472310, 10,
        0x4729A8, GAME_10US_COMPACT, H_CALL, 0x472310, 11,
        0x472A36, GAME_10US_COMPACT, H_CALL, 0x472310, 12,
        0x472AC3, GAME_10US_COMPACT, H_CALL, 0x472310, 13,
        0x472B8C, GAME_10US_COMPACT, H_CALL, 0x472310, 14,
        0x472BD4, GAME_10US_COMPACT, H_CALL, 0x472310, 15,
        0x472C1F, GAME_10US_COMPACT, H_CALL, 0x472310, 16,
        0x472C67, GAME_10US_COMPACT, H_CALL, 0x472310, 17,
        0x472D97, GAME_10US_COMPACT, H_CALL, 0x472310, 18,
        0x472DF6, GAME_10US_COMPACT, H_CALL, 0x472310, 19,
        0x472E4E, GAME_10US_COMPACT, H_CALL, 0x472310, 20,
        0x472EC0, GAME_10US_COMPACT, H_CALL, 0x472310, 21,
        0x472F5B, GAME_10US_COMPACT, H_CALL, 0x472310, 22,
        0x472FD8, GAME_10US_COMPACT, H_CALL, 0x472310, 23,
        0x473041, GAME_10US_COMPACT, H_CALL, 0x472310, 24,
        0x4730BA, GAME_10US_COMPACT, H_CALL, 0x472310, 25,
        0x4730F8, GAME_10US_COMPACT, H_CALL, 0x472310, 26,
        0x473140, GAME_10US_COMPACT, H_CALL, 0x472310, 27,
        0x4731D2, GAME_10US_COMPACT, H_CALL, 0x472310, 28,
        0x473211, GAME_10US_COMPACT, H_CALL, 0x472310, 29,
        0x4732B5, GAME_10US_COMPACT, H_CALL, 0x472310, 30,
        0x473354, GAME_10US_COMPACT, H_CALL, 0x472310, 31,
        0x4733AA, GAME_10US_COMPACT, H_CALL, 0x472310, 32,
        0x47342A, GAME_10US_COMPACT, H_CALL, 0x472310, 33,
        0x473601, GAME_10US_COMPACT, H_CALL, 0x472310, 34,
        0x47361B, GAME_10US_COMPACT, H_CALL, 0x472310, 35,
        0x47367D, GAME_10US_COMPACT, H_CALL, 0x472310, 36,
        0x4736AA, GAME_10US_COMPACT, H_CALL, 0x472310, 37,
        0x47379F, GAME_10US_COMPACT, H_CALL, 0x472310, 38,
        0x473844, GAME_10US_COMPACT, H_CALL, 0x472310, 39,
        0x473A05, GAME_10US_COMPACT, H_CALL, 0x472310, 40,
        0x473BF9, GAME_10US_COMPACT, H_CALL, 0x472310, 41,
        0x473C3C, GAME_10US_COMPACT, H_CALL, 0x472310, 42,
        0x473CB7, GAME_10US_COMPACT, H_CALL, 0x472310, 43,
        0x473D3C, GAME_10US_COMPACT, H_CALL, 0x472310, 44,
        0x473DA7, GAME_10US_COMPACT, H_CALL, 0x472310, 45,
        0x473DD5, GAME_10US_COMPACT, H_CALL, 0x472310, 46,
        0x473E55, GAME_10US_COMPACT, H_CALL, 0x472310, 47,
        0x473EAC, GAME_10US_COMPACT, H_CALL, 0x472310, 48,
        0x473EE5, GAME_10US_COMPACT, H_CALL, 0x472310, 49,
        0x473F1D, GAME_10US_COMPACT, H_CALL, 0x472310, 50,
        0x473F56, GAME_10US_COMPACT, H_CALL, 0x472310, 51,
        0x473F8E, GAME_10US_COMPACT, H_CALL, 0x472310, 52,
        0x4740E0, GAME_10US_COMPACT, H_CALL, 0x472310, 53,
        0x47412C, GAME_10US_COMPACT, H_CALL, 0x472310, 54,
        0x47414C, GAME_10US_COMPACT, H_CALL, 0x472310, 55,
        0x474193, GAME_10US_COMPACT, H_CALL, 0x472310, 56,
        0x4741AF, GAME_10US_COMPACT, H_CALL, 0x472310, 57,
        0x4741E0, GAME_10US_COMPACT, H_CALL, 0x472310, 58,
        0x474265, GAME_10US_COMPACT, H_CALL, 0x472310, 59,
        0x4742B0, GAME_10US_COMPACT, H_CALL, 0x472310, 60,
        0x474326, GAME_10US_COMPACT, H_CALL, 0x472310, 61,
        0x474942, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x474983, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x4749BF, GAME_10US_COMPACT, H_CALL, 0x474900, 3,
        0x474A08, GAME_10US_COMPACT, H_CALL, 0x474900, 4,
        0x474BD8, GAME_10US_COMPACT, H_CALL, 0x474900, 5,
        0x474C0E, GAME_10US_COMPACT, H_CALL, 0x474900, 6,
        0x474E47, GAME_10US_COMPACT, H_CALL, 0x474900, 7,
        0x474E8C, GAME_10US_COMPACT, H_CALL, 0x474900, 8,
        0x474EAC, GAME_10US_COMPACT, H_CALL, 0x474900, 9,
        0x474EDB, GAME_10US_COMPACT, H_CALL, 0x474900, 10,
        0x474F26, GAME_10US_COMPACT, H_CALL, 0x474900, 11,
        0x474F90, GAME_10US_COMPACT, H_CALL, 0x474900, 12,
        0x474FDD, GAME_10US_COMPACT, H_CALL, 0x474900, 13,
        0x475011, GAME_10US_COMPACT, H_CALL, 0x474900, 14,
        0x47504D, GAME_10US_COMPACT, H_CALL, 0x474900, 15,
        0x475089, GAME_10US_COMPACT, H_CALL, 0x474900, 16,
        0x4750A9, GAME_10US_COMPACT, H_CALL, 0x474900, 17,
        0x475174, GAME_10US_COMPACT, H_CALL, 0x474900, 18,
        0x4751A9, GAME_10US_COMPACT, H_CALL, 0x474900, 19,
        0x4751DD, GAME_10US_COMPACT, H_CALL, 0x474900, 20,
        0x475248, GAME_10US_COMPACT, H_CALL, 0x474900, 21,
        0x475283, GAME_10US_COMPACT, H_CALL, 0x474900, 22,
        0x4752B1, GAME_10US_COMPACT, H_CALL, 0x474900, 23,
        0x4752DB, GAME_10US_COMPACT, H_CALL, 0x474900, 24,
        0x47530B, GAME_10US_COMPACT, H_CALL, 0x474900, 25,
        0x475330, GAME_10US_COMPACT, H_CALL, 0x474900, 26,
        0x475373, GAME_10US_COMPACT, H_CALL, 0x474900, 27,
        0x4753B4, GAME_10US_COMPACT, H_CALL, 0x474900, 28,
        0x4753DA, GAME_10US_COMPACT, H_CALL, 0x474900, 29,
        0x475404, GAME_10US_COMPACT, H_CALL, 0x474900, 30,
        0x4754BC, GAME_10US_COMPACT, H_CALL, 0x474900, 31,
        0x475541, GAME_10US_COMPACT, H_CALL, 0x474900, 32,
        0x4755D4, GAME_10US_COMPACT, H_CALL, 0x474900, 33,
        0x475606, GAME_10US_COMPACT, H_CALL, 0x474900, 34,
        0x475636, GAME_10US_COMPACT, H_CALL, 0x474900, 35,
        0x475665, GAME_10US_COMPACT, H_CALL, 0x474900, 36,
        0x475697, GAME_10US_COMPACT, H_CALL, 0x474900, 37,
        0x4756B8, GAME_10US_COMPACT, H_CALL, 0x474900, 38,
        0x47583C, GAME_10US_COMPACT, H_CALL, 0x474900, 39,
        0x475895, GAME_10US_COMPACT, H_CALL, 0x474900, 40,
        0x4758B5, GAME_10US_COMPACT, H_CALL, 0x474900, 41,
        0x4758D4, GAME_10US_COMPACT, H_CALL, 0x474900, 42,
        0x47592A, GAME_10US_COMPACT, H_CALL, 0x474900, 43,
        0x4759CF, GAME_10US_COMPACT, H_CALL, 0x474900, 44,
        0x475B9A, GAME_10US_COMPACT, H_CALL, 0x474900, 45,
        0x475BD8, GAME_10US_COMPACT, H_CALL, 0x474900, 46,
        0x475BF7, GAME_10US_COMPACT, H_CALL, 0x474900, 47,
        0x475C44, GAME_10US_COMPACT, H_CALL, 0x474900, 48,
        0x475C95, GAME_10US_COMPACT, H_CALL, 0x474900, 49,
        0x475CB4, GAME_10US_COMPACT, H_CALL, 0x474900, 50,
        0x475D77, GAME_10US_COMPACT, H_CALL, 0x474900, 51,
        0x475DB5, GAME_10US_COMPACT, H_CALL, 0x474900, 52,
        0x475DE8, GAME_10US_COMPACT, H_CALL, 0x474900, 53,
        0x475E32, GAME_10US_COMPACT, H_CALL, 0x474900, 54,
        0x475E4A, GAME_10US_COMPACT, H_CALL, 0x474900, 55,
        0x475EBB, GAME_10US_COMPACT, H_CALL, 0x474900, 56,
        0x475F0E, GAME_10US_COMPACT, H_CALL, 0x474900, 57,
        0x475F59, GAME_10US_COMPACT, H_CALL, 0x474900, 58,
        0x475FA4, GAME_10US_COMPACT, H_CALL, 0x474900, 59,
        0x476043, GAME_10US_COMPACT, H_CALL, 0x474900, 60,
        0x476092, GAME_10US_COMPACT, H_CALL, 0x474900, 61,
        0x476100, GAME_10US_COMPACT, H_CALL, 0x474900, 62,
        0x4762FC, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1,
        0x47634A, GAME_10US_COMPACT, H_CALL, 0x4762D0, 2,
        0x4763BF, GAME_10US_COMPACT, H_CALL, 0x4762D0, 3,
        0x4763F6, GAME_10US_COMPACT, H_CALL, 0x4762D0, 4,
        0x476450, GAME_10US_COMPACT, H_CALL, 0x4762D0, 5,
        0x4764B3, GAME_10US_COMPACT, H_CALL, 0x4762D0, 6,
        0x476533, GAME_10US_COMPACT, H_CALL, 0x4762D0, 7,
        0x476567, GAME_10US_COMPACT, H_CALL, 0x4762D0, 8,
        0x4765A4, GAME_10US_COMPACT, H_CALL, 0x4762D0, 9,
        0x4765D9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 10,
        0x47665D, GAME_10US_COMPACT, H_CALL, 0x4762D0, 11,
        0x47668E, GAME_10US_COMPACT, H_CALL, 0x4762D0, 12,
        0x4766C9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 13,
        0x476705, GAME_10US_COMPACT, H_CALL, 0x4762D0, 14,
        0x476746, GAME_10US_COMPACT, H_CALL, 0x4762D0, 15,
        0x47678C, GAME_10US_COMPACT, H_CALL, 0x4762D0, 16,
        0x4767B6, GAME_10US_COMPACT, H_CALL, 0x4762D0, 17,
        0x476822, GAME_10US_COMPACT, H_CALL, 0x4762D0, 18,
        0x476852, GAME_10US_COMPACT, H_CALL, 0x4762D0, 19,
        0x47688E, GAME_10US_COMPACT, H_CALL, 0x4762D0, 20,
        0x4768F0, GAME_10US_COMPACT, H_CALL, 0x4762D0, 21,
        0x4769F7, GAME_10US_COMPACT, H_CALL, 0x4762D0, 22,
        0x476ACF, GAME_10US_COMPACT, H_CALL, 0x4762D0, 23,
        0x476BA5, GAME_10US_COMPACT, H_CALL, 0x4762D0, 24,
        0x476BE2, GAME_10US_COMPACT, H_CALL, 0x4762D0, 25,
        0x476C5C, GAME_10US_COMPACT, H_CALL, 0x4762D0, 26,
        0x476C9F, GAME_10US_COMPACT, H_CALL, 0x4762D0, 27,
        0x476CCA, GAME_10US_COMPACT, H_CALL, 0x4762D0, 28,
        0x476D14, GAME_10US_COMPACT, H_CALL, 0x4762D0, 29,
        0x476D43, GAME_10US_COMPACT, H_CALL, 0x4762D0, 30,
        0x476D9D, GAME_10US_COMPACT, H_CALL, 0x4762D0, 31,
        0x476E0D, GAME_10US_COMPACT, H_CALL, 0x4762D0, 32,
        0x476E72, GAME_10US_COMPACT, H_CALL, 0x4762D0, 33,
        0x476EED, GAME_10US_COMPACT, H_CALL, 0x4762D0, 34,
        0x476F14, GAME_10US_COMPACT, H_CALL, 0x4762D0, 35,
        0x476F3B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 36,
        0x476FA1, GAME_10US_COMPACT, H_CALL, 0x4762D0, 37,
        0x47701B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 38,
        0x477083, GAME_10US_COMPACT, H_CALL, 0x4762D0, 39,
        0x477179, GAME_10US_COMPACT, H_CALL, 0x4762D0, 40,
        0x47724B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 41,
        0x4772A1, GAME_10US_COMPACT, H_CALL, 0x4762D0, 42,
        0x4772E9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 43,
        0x477310, GAME_10US_COMPACT, H_CALL, 0x4762D0, 44,
        0x477327, GAME_10US_COMPACT, H_CALL, 0x4762D0, 45,
        0x477376, GAME_10US_COMPACT, H_CALL, 0x4762D0, 46,
        0x4773CF, GAME_10US_COMPACT, H_CALL, 0x4762D0, 47,
        0x4773FC, GAME_10US_COMPACT, H_CALL, 0x4762D0, 48,
        0x47742F, GAME_10US_COMPACT, H_CALL, 0x4762D0, 49,
        0x477450, GAME_10US_COMPACT, H_CALL, 0x4762D0, 50,
        0x47749E, GAME_10US_COMPACT, H_CALL, 0x4762D0, 51,
        0x4774DE, GAME_10US_COMPACT, H_CALL, 0x4762D0, 52,
        0x477549, GAME_10US_COMPACT, H_CALL, 0x4762D0, 53,
        0x477588, GAME_10US_COMPACT, H_CALL, 0x4762D0, 54,
        0x4775B7, GAME_10US_COMPACT, H_CALL, 0x4762D0, 55,
        0x477610, GAME_10US_COMPACT, H_CALL, 0x4762D0, 56,
        0x4776C7, GAME_10US_COMPACT, H_CALL, 0x4762D0, 57,
        0x477707, GAME_10US_COMPACT, H_CALL, 0x4762D0, 58,
        0x477741, GAME_10US_COMPACT, H_CALL, 0x4762D0, 59,
        0x477770, GAME_10US_COMPACT, H_CALL, 0x4762D0, 60,
        0x4777EA, GAME_10US_COMPACT, H_CALL, 0x4762D0, 61,
        0x477863, GAME_10US_COMPACT, H_CALL, 0x4762D0, 62,
        0x4778AE, GAME_10US_COMPACT, H_CALL, 0x4762D0, 63,
        0x4779AB, GAME_10US_COMPACT, H_CALL, 0x4762D0, 64,
        0x4779F0, GAME_10US_COMPACT, H_CALL, 0x4762D0, 65,
        0x477AAA, GAME_10US_COMPACT, H_CALL, 0x4762D0, 66,
        0x477AE9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 67,
        0x477B90, GAME_10US_COMPACT, H_CALL, 0x4762D0, 68,
        0x478042, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x47808D, GAME_10US_COMPACT, H_CALL, 0x478000, 2,
        0x478111, GAME_10US_COMPACT, H_CALL, 0x478000, 3,
        0x4781A3, GAME_10US_COMPACT, H_CALL, 0x478000, 4,
        0x4781E5, GAME_10US_COMPACT, H_CALL, 0x478000, 5,
        0x478225, GAME_10US_COMPACT, H_CALL, 0x478000, 6,
        0x47826A, GAME_10US_COMPACT, H_CALL, 0x478000, 7,
        0x4782A3, GAME_10US_COMPACT, H_CALL, 0x478000, 8,
        0x4782DD, GAME_10US_COMPACT, H_CALL, 0x478000, 9,
        0x478319, GAME_10US_COMPACT, H_CALL, 0x478000, 10,
        0x4784EA, GAME_10US_COMPACT, H_CALL, 0x478000, 11,
        0x478538, GAME_10US_COMPACT, H_CALL, 0x478000, 12,
        0x47859D, GAME_10US_COMPACT, H_CALL, 0x478000, 13,
        0x4785CA, GAME_10US_COMPACT, H_CALL, 0x478000, 14,
        0x478615, GAME_10US_COMPACT, H_CALL, 0x478000, 15,
        0x478673, GAME_10US_COMPACT, H_CALL, 0x478000, 16,
        0x4786DA, GAME_10US_COMPACT, H_CALL, 0x478000, 17,
        0x478762, GAME_10US_COMPACT, H_CALL, 0x478000, 18,
        0x478809, GAME_10US_COMPACT, H_CALL, 0x478000, 19,
        0x47884F, GAME_10US_COMPACT, H_CALL, 0x478000, 20,
        0x478885, GAME_10US_COMPACT, H_CALL, 0x478000, 21,
        0x4788BC, GAME_10US_COMPACT, H_CALL, 0x478000, 22,
        0x4788FF, GAME_10US_COMPACT, H_CALL, 0x478000, 23,
        0x478956, GAME_10US_COMPACT, H_CALL, 0x478000, 24,
        0x47898C, GAME_10US_COMPACT, H_CALL, 0x478000, 25,
        0x4789C3, GAME_10US_COMPACT, H_CALL, 0x478000, 26,
        0x4789E2, GAME_10US_COMPACT, H_CALL, 0x478000, 27,
        0x478A17, GAME_10US_COMPACT, H_CALL, 0x478000, 28,
        0x478BCC, GAME_10US_COMPACT, H_CALL, 0x478000, 29,
        0x478C20, GAME_10US_COMPACT, H_CALL, 0x478000, 30,
        0x478C57, GAME_10US_COMPACT, H_CALL, 0x478000, 31,
        0x478C73, GAME_10US_COMPACT, H_CALL, 0x478000, 32,
        0x478D33, GAME_10US_COMPACT, H_CALL, 0x478000, 33,
        0x478D79, GAME_10US_COMPACT, H_CALL, 0x478000, 34,
        0x478DA9, GAME_10US_COMPACT, H_CALL, 0x478000, 35,
        0x478DCB, GAME_10US_COMPACT, H_CALL, 0x478000, 36,
        0x478E17, GAME_10US_COMPACT, H_CALL, 0x478000, 37,
        0x478E56, GAME_10US_COMPACT, H_CALL, 0x478000, 38,
        0x478EA8, GAME_10US_COMPACT, H_CALL, 0x478000, 39,
        0x478ECF, GAME_10US_COMPACT, H_CALL, 0x478000, 40,
        0x478EF6, GAME_10US_COMPACT, H_CALL, 0x478000, 41,
        0x478F47, GAME_10US_COMPACT, H_CALL, 0x478000, 42,
        0x478F72, GAME_10US_COMPACT, H_CALL, 0x478000, 43,
        0x478FB6, GAME_10US_COMPACT, H_CALL, 0x478000, 44,
        0x478FD6, GAME_10US_COMPACT, H_CALL, 0x478000, 45,
        0x47906F, GAME_10US_COMPACT, H_CALL, 0x478000, 46,
        0x47910B, GAME_10US_COMPACT, H_CALL, 0x478000, 47,
        0x479180, GAME_10US_COMPACT, H_CALL, 0x478000, 48,
        0x4791CC, GAME_10US_COMPACT, H_CALL, 0x478000, 49,
        0x479207, GAME_10US_COMPACT, H_CALL, 0x478000, 50,
        0x479226, GAME_10US_COMPACT, H_CALL, 0x478000, 51,
        0x479271, GAME_10US_COMPACT, H_CALL, 0x478000, 52,
        0x4792F7, GAME_10US_COMPACT, H_CALL, 0x478000, 53,
        0x479323, GAME_10US_COMPACT, H_CALL, 0x478000, 54,
        0x479371, GAME_10US_COMPACT, H_CALL, 0x478000, 55,
        0x479391, GAME_10US_COMPACT, H_CALL, 0x478000, 56,
        0x4793B4, GAME_10US_COMPACT, H_CALL, 0x478000, 57,
        0x479405, GAME_10US_COMPACT, H_CALL, 0x478000, 58,
        0x47945F, GAME_10US_COMPACT, H_CALL, 0x478000, 59,
        0x4794A3, GAME_10US_COMPACT, H_CALL, 0x478000, 60,
        0x479504, GAME_10US_COMPACT, H_CALL, 0x478000, 61,
        0x47953A, GAME_10US_COMPACT, H_CALL, 0x478000, 62,
        0x479590, GAME_10US_COMPACT, H_CALL, 0x478000, 63,
        0x4795CB, GAME_10US_COMPACT, H_CALL, 0x478000, 64,
        0x47961F, GAME_10US_COMPACT, H_CALL, 0x478000, 65,
        0x479673, GAME_10US_COMPACT, H_CALL, 0x478000, 66,
        0x4796F0, GAME_10US_COMPACT, H_CALL, 0x478000, 67,
        0x479710, GAME_10US_COMPACT, H_CALL, 0x478000, 68,
        0x47972F, GAME_10US_COMPACT, H_CALL, 0x478000, 69,
        0x479778, GAME_10US_COMPACT, H_CALL, 0x478000, 70,
        0x4797BA, GAME_10US_COMPACT, H_CALL, 0x478000, 71,
        0x47981B, GAME_10US_COMPACT, H_CALL, 0x478000, 72,
        0x479835, GAME_10US_COMPACT, H_CALL, 0x478000, 73,
        0x479935, GAME_10US_COMPACT, H_CALL, 0x478000, 74,
        0x47995B, GAME_10US_COMPACT, H_CALL, 0x478000, 75,
        0x479DDE, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x479E38, GAME_10US_COMPACT, H_CALL, 0x479DA0, 2,
        0x479F0B, GAME_10US_COMPACT, H_CALL, 0x479DA0, 3,
        0x479F25, GAME_10US_COMPACT, H_CALL, 0x479DA0, 4,
        0x479F41, GAME_10US_COMPACT, H_CALL, 0x479DA0, 5,
        0x47A001, GAME_10US_COMPACT, H_CALL, 0x479DA0, 6,
        0x47A024, GAME_10US_COMPACT, H_CALL, 0x479DA0, 7,
        0x47A05B, GAME_10US_COMPACT, H_CALL, 0x479DA0, 8,
        0x47A08D, GAME_10US_COMPACT, H_CALL, 0x479DA0, 9,
        0x47A0D8, GAME_10US_COMPACT, H_CALL, 0x479DA0, 10,
        0x47A12D, GAME_10US_COMPACT, H_CALL, 0x479DA0, 11,
        0x47A1B5, GAME_10US_COMPACT, H_CALL, 0x479DA0, 12,
        0x47A1EB, GAME_10US_COMPACT, H_CALL, 0x479DA0, 13,
        0x47A23F, GAME_10US_COMPACT, H_CALL, 0x479DA0, 14,
        0x47A273, GAME_10US_COMPACT, H_CALL, 0x479DA0, 15,
        0x47A2A0, GAME_10US_COMPACT, H_CALL, 0x479DA0, 16,
        0x47A2D1, GAME_10US_COMPACT, H_CALL, 0x479DA0, 17,
        0x47A49C, GAME_10US_COMPACT, H_CALL, 0x479DA0, 18,
        0x47A4BC, GAME_10US_COMPACT, H_CALL, 0x479DA0, 19,
        0x47A512, GAME_10US_COMPACT, H_CALL, 0x479DA0, 20,
        0x47A53D, GAME_10US_COMPACT, H_CALL, 0x479DA0, 21,
        0x47A55C, GAME_10US_COMPACT, H_CALL, 0x479DA0, 22,
        0x47A5A4, GAME_10US_COMPACT, H_CALL, 0x479DA0, 23,
        0x47A5F9, GAME_10US_COMPACT, H_CALL, 0x479DA0, 24,
        0x47A7A6, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x47A7E5, GAME_10US_COMPACT, H_CALL, 0x47A760, 2,
        0x47A824, GAME_10US_COMPACT, H_CALL, 0x47A760, 3,
        0x47A884, GAME_10US_COMPACT, H_CALL, 0x47A760, 4,
        0x47A925, GAME_10US_COMPACT, H_CALL, 0x47A760, 5,
        0x47A9BA, GAME_10US_COMPACT, H_CALL, 0x47A760, 6,
        0x47AA05, GAME_10US_COMPACT, H_CALL, 0x47A760, 7,
        0x47AA4D, GAME_10US_COMPACT, H_CALL, 0x47A760, 8,
        0x47AA91, GAME_10US_COMPACT, H_CALL, 0x47A760, 9,
        0x47AAEF, GAME_10US_COMPACT, H_CALL, 0x47A760, 10,
        0x47AB24, GAME_10US_COMPACT, H_CALL, 0x47A760, 11,
        0x47AB5B, GAME_10US_COMPACT, H_CALL, 0x47A760, 12,
        0x47ABC0, GAME_10US_COMPACT, H_CALL, 0x47A760, 13,
        0x47AC0A, GAME_10US_COMPACT, H_CALL, 0x47A760, 14,
        0x47AC42, GAME_10US_COMPACT, H_CALL, 0x47A760, 15,
        0x47AC69, GAME_10US_COMPACT, H_CALL, 0x47A760, 16,
        0x47AD14, GAME_10US_COMPACT, H_CALL, 0x47A760, 17,
        0x47AD5E, GAME_10US_COMPACT, H_CALL, 0x47A760, 18,
        0x47ADBD, GAME_10US_COMPACT, H_CALL, 0x47A760, 19,
        0x47AE30, GAME_10US_COMPACT, H_CALL, 0x47A760, 20,
        0x47AE99, GAME_10US_COMPACT, H_CALL, 0x47A760, 21,
        0x47AED3, GAME_10US_COMPACT, H_CALL, 0x47A760, 22,
        0x47AFD6, GAME_10US_COMPACT, H_CALL, 0x47A760, 23,
        0x47B010, GAME_10US_COMPACT, H_CALL, 0x47A760, 24,
        0x47B02F, GAME_10US_COMPACT, H_CALL, 0x47A760, 25,
        0x47B0EB, GAME_10US_COMPACT, H_CALL, 0x47A760, 26,
        0x47B10D, GAME_10US_COMPACT, H_CALL, 0x47A760, 27,
        0x47B149, GAME_10US_COMPACT, H_CALL, 0x47A760, 28,
        0x47B17D, GAME_10US_COMPACT, H_CALL, 0x47A760, 29,
        0x47B1A8, GAME_10US_COMPACT, H_CALL, 0x47A760, 30,
        0x47B254, GAME_10US_COMPACT, H_CALL, 0x47A760, 31,
        0x47B273, GAME_10US_COMPACT, H_CALL, 0x47A760, 32,
        0x47B2C0, GAME_10US_COMPACT, H_CALL, 0x47A760, 33,
        0x47B2DC, GAME_10US_COMPACT, H_CALL, 0x47A760, 34,
        0x47B347, GAME_10US_COMPACT, H_CALL, 0x47A760, 35,
        0x47B37E, GAME_10US_COMPACT, H_CALL, 0x47A760, 36,
        0x47B3BF, GAME_10US_COMPACT, H_CALL, 0x47A760, 37,
        0x47B40A, GAME_10US_COMPACT, H_CALL, 0x47A760, 38,
        0x47B433, GAME_10US_COMPACT, H_CALL, 0x47A760, 39,
        0x47B47D, GAME_10US_COMPACT, H_CALL, 0x47A760, 40,
        0x47B50D, GAME_10US_COMPACT, H_CALL, 0x47A760, 41,
        0x47B58B, GAME_10US_COMPACT, H_CALL, 0x47A760, 42,
        0x47B5CF, GAME_10US_COMPACT, H_CALL, 0x47A760, 43,
        0x47B61D, GAME_10US_COMPACT, H_CALL, 0x47A760, 44,
        0x47B63E, GAME_10US_COMPACT, H_CALL, 0x47A760, 45,
        0x47B69C, GAME_10US_COMPACT, H_CALL, 0x47A760, 46,
        0x47B6C4, GAME_10US_COMPACT, H_CALL, 0x47A760, 47,
        0x47B70E, GAME_10US_COMPACT, H_CALL, 0x47A760, 48,
        0x47B760, GAME_10US_COMPACT, H_CALL, 0x47A760, 49,
        0x47B7A6, GAME_10US_COMPACT, H_CALL, 0x47A760, 50,
        0x47B7E8, GAME_10US_COMPACT, H_CALL, 0x47A760, 51,
        0x47B850, GAME_10US_COMPACT, H_CALL, 0x47A760, 52,
        0x47B892, GAME_10US_COMPACT, H_CALL, 0x47A760, 53,
        0x47B8D2, GAME_10US_COMPACT, H_CALL, 0x47A760, 54,
        0x47B8FE, GAME_10US_COMPACT, H_CALL, 0x47A760, 55,
        0x47B937, GAME_10US_COMPACT, H_CALL, 0x47A760, 56,
        0x47B987, GAME_10US_COMPACT, H_CALL, 0x47A760, 57,
        0x47B9B3, GAME_10US_COMPACT, H_CALL, 0x47A760, 58,
        0x47B9FF, GAME_10US_COMPACT, H_CALL, 0x47A760, 59,
        0x47BA36, GAME_10US_COMPACT, H_CALL, 0x47A760, 60,
        0x47BA9C, GAME_10US_COMPACT, H_CALL, 0x47A760, 61,
        0x47BB1B, GAME_10US_COMPACT, H_CALL, 0x47A760, 62,
        0x47BBBA, GAME_10US_COMPACT, H_CALL, 0x47A760, 63,
        0x47BBFB, GAME_10US_COMPACT, H_CALL, 0x47A760, 64,
        0x47BC6D, GAME_10US_COMPACT, H_CALL, 0x47A760, 65,
        0x47BC93, GAME_10US_COMPACT, H_CALL, 0x47A760, 66,
        0x47BCBB, GAME_10US_COMPACT, H_CALL, 0x47A760, 67,
        0x47BCEC, GAME_10US_COMPACT, H_CALL, 0x47A760, 68,
        0x47BD2B, GAME_10US_COMPACT, H_CALL, 0x47A760, 69,
        0x47BD86, GAME_10US_COMPACT, H_CALL, 0x47A760, 70,
        0x47BDB8, GAME_10US_COMPACT, H_CALL, 0x47A760, 71,
        0x47BDD6, GAME_10US_COMPACT, H_CALL, 0x47A760, 72,
        0x47BEEB, GAME_10US_COMPACT, H_CALL, 0x47A760, 73,
        0x47C12B, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47C16D, GAME_10US_COMPACT, H_CALL, 0x47C100, 2,
        0x47C233, GAME_10US_COMPACT, H_CALL, 0x47C100, 3,
        0x47C291, GAME_10US_COMPACT, H_CALL, 0x47C100, 4,
        0x47C314, GAME_10US_COMPACT, H_CALL, 0x47C100, 5,
        0x47C3FD, GAME_10US_COMPACT, H_CALL, 0x47C100, 6,
        0x47C44A, GAME_10US_COMPACT, H_CALL, 0x47C100, 7,
        0x47C4DF, GAME_10US_COMPACT, H_CALL, 0x47C100, 8,
        0x47C51C, GAME_10US_COMPACT, H_CALL, 0x47C100, 9,
        0x47C53B, GAME_10US_COMPACT, H_CALL, 0x47C100, 10,
        0x47C59C, GAME_10US_COMPACT, H_CALL, 0x47C100, 11,
        0x47C614, GAME_10US_COMPACT, H_CALL, 0x47C100, 12,
        0x47C664, GAME_10US_COMPACT, H_CALL, 0x47C100, 13,
        0x47C686, GAME_10US_COMPACT, H_CALL, 0x47C100, 14,
        0x47C6AE, GAME_10US_COMPACT, H_CALL, 0x47C100, 15,
        0x47C768, GAME_10US_COMPACT, H_CALL, 0x47C100, 16,
        0x47C790, GAME_10US_COMPACT, H_CALL, 0x47C100, 17,
        0x47C7C7, GAME_10US_COMPACT, H_CALL, 0x47C100, 18,
        0x47C85E, GAME_10US_COMPACT, H_CALL, 0x47C100, 19,
        0x47C8E0, GAME_10US_COMPACT, H_CALL, 0x47C100, 20,
        0x47C962, GAME_10US_COMPACT, H_CALL, 0x47C100, 21,
        0x47C9E3, GAME_10US_COMPACT, H_CALL, 0x47C100, 22,
        0x47CAAD, GAME_10US_COMPACT, H_CALL, 0x47C100, 23,
        0x47CB48, GAME_10US_COMPACT, H_CALL, 0x47C100, 24,
        0x47CBE5, GAME_10US_COMPACT, H_CALL, 0x47C100, 25,
        0x47CC68, GAME_10US_COMPACT, H_CALL, 0x47C100, 26,
        0x47CCD2, GAME_10US_COMPACT, H_CALL, 0x47C100, 27,
        0x47CCF2, GAME_10US_COMPACT, H_CALL, 0x47C100, 28,
        0x47CD75, GAME_10US_COMPACT, H_CALL, 0x47C100, 29,
        0x47CDCB, GAME_10US_COMPACT, H_CALL, 0x47C100, 30,
        0x47CE27, GAME_10US_COMPACT, H_CALL, 0x47C100, 31,
        0x47CE75, GAME_10US_COMPACT, H_CALL, 0x47C100, 32,
        0x47CEC3, GAME_10US_COMPACT, H_CALL, 0x47C100, 33,
        0x47CF01, GAME_10US_COMPACT, H_CALL, 0x47C100, 34,
        0x47CF29, GAME_10US_COMPACT, H_CALL, 0x47C100, 35,
        0x47CF52, GAME_10US_COMPACT, H_CALL, 0x47C100, 36,
        0x47D00F, GAME_10US_COMPACT, H_CALL, 0x47C100, 37,
        0x47D038, GAME_10US_COMPACT, H_CALL, 0x47C100, 38,
        0x47D081, GAME_10US_COMPACT, H_CALL, 0x47C100, 39,
        0x47D09D, GAME_10US_COMPACT, H_CALL, 0x47C100, 40,
        0x47D0B0, GAME_10US_COMPACT, H_CALL, 0x47C100, 41,
        0x47D252, GAME_10US_COMPACT, H_CALL, 0x47D210, 1,
        0x47D282, GAME_10US_COMPACT, H_CALL, 0x47D210, 2,
        0x47D30B, GAME_10US_COMPACT, H_CALL, 0x47D210, 3,
        0x47D3CC, GAME_10US_COMPACT, H_CALL, 0x47D210, 4,
        0x47D42F, GAME_10US_COMPACT, H_CALL, 0x47D210, 5,
        0x47D460, GAME_10US_COMPACT, H_CALL, 0x47D210, 6,
        0x47D4AC, GAME_10US_COMPACT, H_CALL, 0x47D210, 7,
        0x47D56B, GAME_10US_COMPACT, H_CALL, 0x47D210, 8,
        0x47D5CD, GAME_10US_COMPACT, H_CALL, 0x47D210, 9,
        0x47D6AC, GAME_10US_COMPACT, H_CALL, 0x47D210, 10,
        0x47D6D1, GAME_10US_COMPACT, H_CALL, 0x47D210, 11,
        0x47D725, GAME_10US_COMPACT, H_CALL, 0x47D210, 12,
        0x47D75E, GAME_10US_COMPACT, H_CALL, 0x47D210, 13,
        0x47D78F, GAME_10US_COMPACT, H_CALL, 0x47D210, 14,
        0x47D7E5, GAME_10US_COMPACT, H_CALL, 0x47D210, 15,
        0x47D817, GAME_10US_COMPACT, H_CALL, 0x47D210, 16,
        0x47D849, GAME_10US_COMPACT, H_CALL, 0x47D210, 17,
        0x47DA2E, GAME_10US_COMPACT, H_CALL, 0x47D210, 18,
        0x47DA94, GAME_10US_COMPACT, H_CALL, 0x47D210, 19,
        0x47DB0F, GAME_10US_COMPACT, H_CALL, 0x47D210, 20,
        0x47DB6B, GAME_10US_COMPACT, H_CALL, 0x47D210, 21,
        0x47DC4F, GAME_10US_COMPACT, H_CALL, 0x47D210, 22,
        0x47DD33, GAME_10US_COMPACT, H_CALL, 0x47D210, 23,
        0x47DD79, GAME_10US_COMPACT, H_CALL, 0x47D210, 24,
        0x47DDBF, GAME_10US_COMPACT, H_CALL, 0x47D210, 25,
        0x47DDEA, GAME_10US_COMPACT, H_CALL, 0x47D210, 26,
        0x47DE9E, GAME_10US_COMPACT, H_CALL, 0x47D210, 27,
        0x47DECC, GAME_10US_COMPACT, H_CALL, 0x47D210, 28,
        0x47E0D5, GAME_10US_COMPACT, H_CALL, 0x47E090, 1,
        0x47E154, GAME_10US_COMPACT, H_CALL, 0x47E090, 2,
        0x47E1BA, GAME_10US_COMPACT, H_CALL, 0x47E090, 3,
        0x47E2A0, GAME_10US_COMPACT, H_CALL, 0x47E090, 4,
        0x47E335, GAME_10US_COMPACT, H_CALL, 0x47E090, 5,
        0x47E389, GAME_10US_COMPACT, H_CALL, 0x47E090, 6,
        0x47E3CC, GAME_10US_COMPACT, H_CALL, 0x47E090, 7,
        0x47E40E, GAME_10US_COMPACT, H_CALL, 0x47E090, 8,
        0x47E453, GAME_10US_COMPACT, H_CALL, 0x47E090, 9,
        0x47E491, GAME_10US_COMPACT, H_CALL, 0x47E090, 10,
        0x47E504, GAME_10US_COMPACT, H_CALL, 0x47E090, 11,
        0x47E57E, GAME_10US_COMPACT, H_CALL, 0x47E090, 12,
        0x47E666, GAME_10US_COMPACT, H_CALL, 0x47E090, 13,
        0x47E6AF, GAME_10US_COMPACT, H_CALL, 0x47E090, 14,
        0x47E6DD, GAME_10US_COMPACT, H_CALL, 0x47E090, 15,
        0x47E75D, GAME_10US_COMPACT, H_CALL, 0x47E090, 16,
        0x47E7B0, GAME_10US_COMPACT, H_CALL, 0x47E090, 17,
        0x47E818, GAME_10US_COMPACT, H_CALL, 0x47E090, 18,
        0x47E881, GAME_10US_COMPACT, H_CALL, 0x47E090, 19,
        0x47E9E4, GAME_10US_COMPACT, H_CALL, 0x47E090, 20,
        0x47EA2F, GAME_10US_COMPACT, H_CALL, 0x47E090, 21,
        0x47EA78, GAME_10US_COMPACT, H_CALL, 0x47E090, 22,
        0x47EA9B, GAME_10US_COMPACT, H_CALL, 0x47E090, 23,
        0x47EAE4, GAME_10US_COMPACT, H_CALL, 0x47E090, 24,
        0x47EBD5, GAME_10US_COMPACT, H_CALL, 0x47E090, 25,
        0x47ECC6, GAME_10US_COMPACT, H_CALL, 0x47E090, 26,
        0x47ECE5, GAME_10US_COMPACT, H_CALL, 0x47E090, 27,
        0x47ED04, GAME_10US_COMPACT, H_CALL, 0x47E090, 28,
        0x47ED48, GAME_10US_COMPACT, H_CALL, 0x47E090, 29,
        0x47EDAD, GAME_10US_COMPACT, H_CALL, 0x47E090, 30,
        0x47EE31, GAME_10US_COMPACT, H_CALL, 0x47E090, 31,
        0x47EE87, GAME_10US_COMPACT, H_CALL, 0x47E090, 32,
        0x47EEBC, GAME_10US_COMPACT, H_CALL, 0x47E090, 33,
        0x47EF05, GAME_10US_COMPACT, H_CALL, 0x47E090, 34,
        0x47EF94, GAME_10US_COMPACT, H_CALL, 0x47E090, 35,
        0x47EFE2, GAME_10US_COMPACT, H_CALL, 0x47E090, 36,
        0x47F042, GAME_10US_COMPACT, H_CALL, 0x47E090, 37,
        0x47F092, GAME_10US_COMPACT, H_CALL, 0x47E090, 38,
        0x47F1E6, GAME_10US_COMPACT, H_CALL, 0x47E090, 39,
        0x47F3BC, GAME_10US_COMPACT, H_CALL, 0x47F370, 1,
        0x47F411, GAME_10US_COMPACT, H_CALL, 0x47F370, 2,
        0x47F45B, GAME_10US_COMPACT, H_CALL, 0x47F370, 3,
        0x47F47E, GAME_10US_COMPACT, H_CALL, 0x47F370, 4,
        0x47F4F5, GAME_10US_COMPACT, H_CALL, 0x47F370, 5,
        0x47F63E, GAME_10US_COMPACT, H_CALL, 0x47F370, 6,
        0x47F688, GAME_10US_COMPACT, H_CALL, 0x47F370, 7,
        0x47F6C1, GAME_10US_COMPACT, H_CALL, 0x47F370, 8,
        0x47F761, GAME_10US_COMPACT, H_CALL, 0x47F370, 9,
        0x47F825, GAME_10US_COMPACT, H_CALL, 0x47F370, 10,
        0x47F862, GAME_10US_COMPACT, H_CALL, 0x47F370, 11,
        0x47F893, GAME_10US_COMPACT, H_CALL, 0x47F370, 12,
        0x47F90C, GAME_10US_COMPACT, H_CALL, 0x47F370, 13,
        0x47FA6B, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1,
        0x47FAEA, GAME_10US_COMPACT, H_CALL, 0x47FA30, 2,
        0x47FBE2, GAME_10US_COMPACT, H_CALL, 0x47FA30, 3,
        0x47FCAB, GAME_10US_COMPACT, H_CALL, 0x47FA30, 4,
        0x47FDA5, GAME_10US_COMPACT, H_CALL, 0x47FA30, 5,
        0x47FDE1, GAME_10US_COMPACT, H_CALL, 0x47FA30, 6,
        0x47FE38, GAME_10US_COMPACT, H_CALL, 0x47FA30, 7,
        0x47FE90, GAME_10US_COMPACT, H_CALL, 0x47FA30, 8,
        0x47FEF0, GAME_10US_COMPACT, H_CALL, 0x47FA30, 9,
        0x47FF87, GAME_10US_COMPACT, H_CALL, 0x47FA30, 10,
        0x47FFC7, GAME_10US_COMPACT, H_CALL, 0x47FA30, 11,
        0x48000C, GAME_10US_COMPACT, H_CALL, 0x47FA30, 12,
        0x4800E9, GAME_10US_COMPACT, H_CALL, 0x47FA30, 13,
        0x48014C, GAME_10US_COMPACT, H_CALL, 0x47FA30, 14,
        0x480221, GAME_10US_COMPACT, H_CALL, 0x47FA30, 15,
        0x48028C, GAME_10US_COMPACT, H_CALL, 0x47FA30, 16,
        0x4802F5, GAME_10US_COMPACT, H_CALL, 0x47FA30, 17,
        0x480525, GAME_10US_COMPACT, H_CALL, 0x47FA30, 18,
        0x48056E, GAME_10US_COMPACT, H_CALL, 0x47FA30, 19,
        0x480681, GAME_10US_COMPACT, H_CALL, 0x47FA30, 20,
        0x4806B7, GAME_10US_COMPACT, H_CALL, 0x47FA30, 21,
        0x4807BB, GAME_10US_COMPACT, H_CALL, 0x47FA30, 22,
        0x4807D3, GAME_10US_COMPACT, H_CALL, 0x47FA30, 23,
        0x480803, GAME_10US_COMPACT, H_CALL, 0x47FA30, 24,
        0x480917, GAME_10US_COMPACT, H_CALL, 0x47FA30, 25,
        0x48094C, GAME_10US_COMPACT, H_CALL, 0x47FA30, 26,
        0x480981, GAME_10US_COMPACT, H_CALL, 0x47FA30, 27,
        0x4809B6, GAME_10US_COMPACT, H_CALL, 0x47FA30, 28,
        0x480A08, GAME_10US_COMPACT, H_CALL, 0x47FA30, 29,
        0x480A7E, GAME_10US_COMPACT, H_CALL, 0x47FA30, 30,
        0x480AD1, GAME_10US_COMPACT, H_CALL, 0x47FA30, 31,
        0x480B49, GAME_10US_COMPACT, H_CALL, 0x47FA30, 32,
        0x480BAB, GAME_10US_COMPACT, H_CALL, 0x47FA30, 33,
        0x480C12, GAME_10US_COMPACT, H_CALL, 0x47FA30, 34,
        0x480C93, GAME_10US_COMPACT, H_CALL, 0x47FA30, 35,
        0x480D00, GAME_10US_COMPACT, H_CALL, 0x47FA30, 36,
        0x480D2C, GAME_10US_COMPACT, H_CALL, 0x47FA30, 37,
        0x480E18, GAME_10US_COMPACT, H_CALL, 0x47FA30, 38,
        0x480E8E, GAME_10US_COMPACT, H_CALL, 0x47FA30, 39,
        0x48135F, GAME_10US_COMPACT, H_CALL, 0x481300, 1,
        0x481439, GAME_10US_COMPACT, H_CALL, 0x481300, 2,
        0x48147D, GAME_10US_COMPACT, H_CALL, 0x481300, 3,
        0x4814E8, GAME_10US_COMPACT, H_CALL, 0x481300, 4,
        0x48150E, GAME_10US_COMPACT, H_CALL, 0x481300, 5,
        0x48161D, GAME_10US_COMPACT, H_CALL, 0x481300, 6,
        0x48167C, GAME_10US_COMPACT, H_CALL, 0x481300, 7,
        0x481763, GAME_10US_COMPACT, H_CALL, 0x481300, 8,
        0x481792, GAME_10US_COMPACT, H_CALL, 0x481300, 9,
        0x4817C1, GAME_10US_COMPACT, H_CALL, 0x481300, 10,
        0x48180C, GAME_10US_COMPACT, H_CALL, 0x481300, 11,
        0x481828, GAME_10US_COMPACT, H_CALL, 0x481300, 12,
        0x481884, GAME_10US_COMPACT, H_CALL, 0x481300, 13,
        0x4818BF, GAME_10US_COMPACT, H_CALL, 0x481300, 14,
        0x481A0C, GAME_10US_COMPACT, H_CALL, 0x481300, 15,
        0x481AB2, GAME_10US_COMPACT, H_CALL, 0x481300, 16,
        0x481AE2, GAME_10US_COMPACT, H_CALL, 0x481300, 17,
        0x481B4B, GAME_10US_COMPACT, H_CALL, 0x481300, 18,
        0x481B88, GAME_10US_COMPACT, H_CALL, 0x481300, 19,
        0x481BC5, GAME_10US_COMPACT, H_CALL, 0x481300, 20,
        0x481BE9, GAME_10US_COMPACT, H_CALL, 0x481300, 21,
        0x481C0C, GAME_10US_COMPACT, H_CALL, 0x481300, 22,
        0x481C49, GAME_10US_COMPACT, H_CALL, 0x481300, 23,
        0x481C86, GAME_10US_COMPACT, H_CALL, 0x481300, 24,
        0x481CA9, GAME_10US_COMPACT, H_CALL, 0x481300, 25,
        0x48233D, GAME_10US_COMPACT, H_CALL, 0x481300, 26,
        0x482A9A, GAME_10US_COMPACT, H_CALL, 0x481300, 27,
        0x482B51, GAME_10US_COMPACT, H_CALL, 0x481300, 28,
        0x482B8D, GAME_10US_COMPACT, H_CALL, 0x481300, 29,
        0x482C6B, GAME_10US_COMPACT, H_CALL, 0x481300, 30,
        0x482CDF, GAME_10US_COMPACT, H_CALL, 0x481300, 31,
        0x482D56, GAME_10US_COMPACT, H_CALL, 0x481300, 32,
        0x482EA7, GAME_10US_COMPACT, H_CALL, 0x481300, 33,
        0x482F88, GAME_10US_COMPACT, H_CALL, 0x481300, 34,
        0x4831A6, GAME_10US_COMPACT, H_CALL, 0x481300, 35,
        0x4831FC, GAME_10US_COMPACT, H_CALL, 0x481300, 36,
        0x48323D, GAME_10US_COMPACT, H_CALL, 0x481300, 37,
        0x4832E4, GAME_10US_COMPACT, H_CALL, 0x481300, 38,
        0x48332E, GAME_10US_COMPACT, H_CALL, 0x481300, 39,
        0x48352F, GAME_10US_COMPACT, H_CALL, 0x481300, 40,
        0x483584, GAME_10US_COMPACT, H_CALL, 0x481300, 41,
        0x483C53, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x483C90, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x483DFA, GAME_10US_COMPACT, H_CALL, 0x483BD0, 3,
        0x483E84, GAME_10US_COMPACT, H_CALL, 0x483BD0, 4,
        0x483F93, GAME_10US_COMPACT, H_CALL, 0x483BD0, 5,
        0x484079, GAME_10US_COMPACT, H_CALL, 0x483BD0, 6,
        0x4841E7, GAME_10US_COMPACT, H_CALL, 0x483BD0, 7,
        0x48424E, GAME_10US_COMPACT, H_CALL, 0x483BD0, 8,
        0x484292, GAME_10US_COMPACT, H_CALL, 0x483BD0, 9,
        0x4842B3, GAME_10US_COMPACT, H_CALL, 0x483BD0, 10,
        0x4842F0, GAME_10US_COMPACT, H_CALL, 0x483BD0, 11,
        0x484374, GAME_10US_COMPACT, H_CALL, 0x483BD0, 12,
        0x484393, GAME_10US_COMPACT, H_CALL, 0x483BD0, 13,
        0x4843DE, GAME_10US_COMPACT, H_CALL, 0x483BD0, 14,
        0x48446C, GAME_10US_COMPACT, H_CALL, 0x483BD0, 15,
        0x4844BC, GAME_10US_COMPACT, H_CALL, 0x483BD0, 16,
        0x484566, GAME_10US_COMPACT, H_CALL, 0x483BD0, 17,
        0x48460B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 18,
        0x48465F, GAME_10US_COMPACT, H_CALL, 0x483BD0, 19,
        0x4846F3, GAME_10US_COMPACT, H_CALL, 0x483BD0, 20,
        0x484703, GAME_10US_COMPACT, H_CALL, 0x483BD0, 21,
        0x484713, GAME_10US_COMPACT, H_CALL, 0x483BD0, 22,
        0x48475E, GAME_10US_COMPACT, H_CALL, 0x483BD0, 23,
        0x484792, GAME_10US_COMPACT, H_CALL, 0x483BD0, 24,
        0x48481F, GAME_10US_COMPACT, H_CALL, 0x483BD0, 25,
        0x4849D0, GAME_10US_COMPACT, H_CALL, 0x483BD0, 26,
        0x4849EF, GAME_10US_COMPACT, H_CALL, 0x483BD0, 27,
        0x484AB8, GAME_10US_COMPACT, H_CALL, 0x483BD0, 28,
        0x484B7B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 29,
        0x484B99, GAME_10US_COMPACT, H_CALL, 0x483BD0, 30,
        0x484C0A, GAME_10US_COMPACT, H_CALL, 0x483BD0, 31,
        0x484C64, GAME_10US_COMPACT, H_CALL, 0x483BD0, 32,
        0x484CC0, GAME_10US_COMPACT, H_CALL, 0x483BD0, 33,
        0x484D0C, GAME_10US_COMPACT, H_CALL, 0x483BD0, 34,
        0x485007, GAME_10US_COMPACT, H_CALL, 0x483BD0, 35,
        0x48503B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 36,
        0x485067, GAME_10US_COMPACT, H_CALL, 0x483BD0, 37,
        0x4850A3, GAME_10US_COMPACT, H_CALL, 0x483BD0, 38,
        0x48510B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 39,
        0x485143, GAME_10US_COMPACT, H_CALL, 0x483BD0, 40,
        0x485164, GAME_10US_COMPACT, H_CALL, 0x483BD0, 41,
        0x48519F, GAME_10US_COMPACT, H_CALL, 0x483BD0, 42,
        0x4851CB, GAME_10US_COMPACT, H_CALL, 0x483BD0, 43,
        0x485207, GAME_10US_COMPACT, H_CALL, 0x483BD0, 44,
        0x48522C, GAME_10US_COMPACT, H_CALL, 0x483BD0, 45,
        0x485265, GAME_10US_COMPACT, H_CALL, 0x483BD0, 46,
        0x4853DD, GAME_10US_COMPACT, H_CALL, 0x483BD0, 47,
        0x4854BD, GAME_10US_COMPACT, H_CALL, 0x483BD0, 48,
        0x48551A, GAME_10US_COMPACT, H_CALL, 0x483BD0, 49,
        0x485536, GAME_10US_COMPACT, H_CALL, 0x483BD0, 50,
        0x485578, GAME_10US_COMPACT, H_CALL, 0x483BD0, 51,
        0x4855BA, GAME_10US_COMPACT, H_CALL, 0x483BD0, 52,
        0x485682, GAME_10US_COMPACT, H_CALL, 0x483BD0, 53,
        0x486DB1, GAME_10US_COMPACT, H_CALL, 0x486D80, 1,
        0x48711C, GAME_10US_COMPACT, H_CALL, 0x4870F0, 1,
        0x48744C, GAME_10US_COMPACT, H_CALL, 0x487420, 1,
        0x48774C, GAME_10US_COMPACT, H_CALL, 0x487720, 1,
        0x487A50, GAME_10US_COMPACT, H_CALL, 0x487A20, 1,
        0x487D29, GAME_10US_COMPACT, H_CALL, 0x487D10, 1,
        0x487F94, GAME_10US_COMPACT, H_CALL, 0x487F60, 1,
        0x48840F, GAME_10US_COMPACT, H_CALL, 0x4883F0, 1,
        0x488447, GAME_10US_COMPACT, H_CALL, 0x4883F0, 2,
        0x4887A2, GAME_10US_COMPACT, H_CALL, 0x488780, 1,
        0x488B80, GAME_10US_COMPACT, H_CALL, 0x488B50, 1,
        0x488EE7, GAME_10US_COMPACT, H_CALL, 0x488EC0, 1,
        0x48916C, GAME_10US_COMPACT, H_CALL, 0x489150, 1,
        0x4891A1, GAME_10US_COMPACT, H_CALL, 0x489150, 2,
        0x48954E, GAME_10US_COMPACT, H_CALL, 0x489500, 1,
        0x489599, GAME_10US_COMPACT, H_CALL, 0x489500, 2,
        0x4895D9, GAME_10US_COMPACT, H_CALL, 0x489500, 3,
        0x48961F, GAME_10US_COMPACT, H_CALL, 0x489500, 4,
        0x489642, GAME_10US_COMPACT, H_CALL, 0x489500, 5,
        0x48968B, GAME_10US_COMPACT, H_CALL, 0x489500, 6,
        0x4896EC, GAME_10US_COMPACT, H_CALL, 0x489500, 7,
        0x489735, GAME_10US_COMPACT, H_CALL, 0x489500, 8,
        0x489761, GAME_10US_COMPACT, H_CALL, 0x489500, 9,
        0x4897A3, GAME_10US_COMPACT, H_CALL, 0x489500, 10,
        0x489835, GAME_10US_COMPACT, H_CALL, 0x489500, 11,
        0x4898CF, GAME_10US_COMPACT, H_CALL, 0x489500, 12,
        0x4898F4, GAME_10US_COMPACT, H_CALL, 0x489500, 13,
        0x489929, GAME_10US_COMPACT, H_CALL, 0x489500, 14,
        0x489AB2, GAME_10US_COMPACT, H_CALL, 0x489500, 15,
        0x489AFA, GAME_10US_COMPACT, H_CALL, 0x489500, 16,
        0x489B57, GAME_10US_COMPACT, H_CALL, 0x489500, 17,
        0x489B78, GAME_10US_COMPACT, H_CALL, 0x489500, 18,
        0x489BB2, GAME_10US_COMPACT, H_CALL, 0x489500, 19,
        0x489C22, GAME_10US_COMPACT, H_CALL, 0x489500, 20,
        0x489C4C, GAME_10US_COMPACT, H_CALL, 0x489500, 21,
        0x489C96, GAME_10US_COMPACT, H_CALL, 0x489500, 22,
        0x489D5F, GAME_10US_COMPACT, H_CALL, 0x489500, 23,
        0x489D8A, GAME_10US_COMPACT, H_CALL, 0x489500, 24,
        0x489DB8, GAME_10US_COMPACT, H_CALL, 0x489500, 25,
        0x489DDE, GAME_10US_COMPACT, H_CALL, 0x489500, 26,
        0x489E77, GAME_10US_COMPACT, H_CALL, 0x489500, 27,
        0x489EC0, GAME_10US_COMPACT, H_CALL, 0x489500, 28,
        0x489F09, GAME_10US_COMPACT, H_CALL, 0x489500, 29,
        0x489F98, GAME_10US_COMPACT, H_CALL, 0x489500, 30,
        0x489FBB, GAME_10US_COMPACT, H_CALL, 0x489500, 31,
        0x48A027, GAME_10US_COMPACT, H_CALL, 0x489500, 32,
        0x48A078, GAME_10US_COMPACT, H_CALL, 0x489500, 33,
        0x48A10A, GAME_10US_COMPACT, H_CALL, 0x489500, 34,
        0x48A17C, GAME_10US_COMPACT, H_CALL, 0x489500, 35,
        0x48A354, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48A410, GAME_10US_COMPACT, H_CALL, 0x48A320, 2,
        0x48A4AD, GAME_10US_COMPACT, H_CALL, 0x48A320, 3,
        0x48A5B9, GAME_10US_COMPACT, H_CALL, 0x48A320, 4,
        0x48A601, GAME_10US_COMPACT, H_CALL, 0x48A320, 5,
        0x48A664, GAME_10US_COMPACT, H_CALL, 0x48A320, 6,
        0x48A6AC, GAME_10US_COMPACT, H_CALL, 0x48A320, 7,
        0x48A727, GAME_10US_COMPACT, H_CALL, 0x48A320, 8,
        0x48A7B8, GAME_10US_COMPACT, H_CALL, 0x48A320, 9,
        0x48A865, GAME_10US_COMPACT, H_CALL, 0x48A320, 10,
        0x48A8AC, GAME_10US_COMPACT, H_CALL, 0x48A320, 11,
        0x48A906, GAME_10US_COMPACT, H_CALL, 0x48A320, 12,
        0x48A93F, GAME_10US_COMPACT, H_CALL, 0x48A320, 13,
        0x48A978, GAME_10US_COMPACT, H_CALL, 0x48A320, 14,
        0x48A9E7, GAME_10US_COMPACT, H_CALL, 0x48A320, 15,
        0x48AA4C, GAME_10US_COMPACT, H_CALL, 0x48A320, 16,
        0x48AAD3, GAME_10US_COMPACT, H_CALL, 0x48A320, 17,
        0x48AB34, GAME_10US_COMPACT, H_CALL, 0x48A320, 18,
        0x48AB7D, GAME_10US_COMPACT, H_CALL, 0x48A320, 19,
        0x48ABDE, GAME_10US_COMPACT, H_CALL, 0x48A320, 20,
        0x48AC42, GAME_10US_COMPACT, H_CALL, 0x48A320, 21,
        0x48AC97, GAME_10US_COMPACT, H_CALL, 0x48A320, 22,
        0x48ACD1, GAME_10US_COMPACT, H_CALL, 0x48A320, 23,
        0x48AD34, GAME_10US_COMPACT, H_CALL, 0x48A320, 24,
        0x48AD5C, GAME_10US_COMPACT, H_CALL, 0x48A320, 25,
        0x48AD93, GAME_10US_COMPACT, H_CALL, 0x48A320, 26,
        0x48AE6D, GAME_10US_COMPACT, H_CALL, 0x48A320, 27,
        0x48AE9E, GAME_10US_COMPACT, H_CALL, 0x48A320, 28,
        0x48AEE0, GAME_10US_COMPACT, H_CALL, 0x48A320, 29,
        0x48AF37, GAME_10US_COMPACT, H_CALL, 0x48A320, 30,
        0x48AFBF, GAME_10US_COMPACT, H_CALL, 0x48A320, 31,
        0x48B074, GAME_10US_COMPACT, H_CALL, 0x48A320, 32,
        0x48B0EB, GAME_10US_COMPACT, H_CALL, 0x48A320, 33,
        0x48B10F, GAME_10US_COMPACT, H_CALL, 0x48A320, 34,
        0x48B13C, GAME_10US_COMPACT, H_CALL, 0x48A320, 35,
        0x48B1A1, GAME_10US_COMPACT, H_CALL, 0x48A320, 36,
        0x48B26C, GAME_10US_COMPACT, H_CALL, 0x48A320, 37,
        0x48B2B4, GAME_10US_COMPACT, H_CALL, 0x48A320, 38,
        0x48B30E, GAME_10US_COMPACT, H_CALL, 0x48A320, 39,
        0x48B369, GAME_10US_COMPACT, H_CALL, 0x48A320, 40,
        0x48B3C0, GAME_10US_COMPACT, H_CALL, 0x48A320, 41,
        0x48B3EA, GAME_10US_COMPACT, H_CALL, 0x48A320, 42,
        0x48B5F3, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48B623, GAME_10US_COMPACT, H_CALL, 0x48B590, 2,
        0x48B648, GAME_10US_COMPACT, H_CALL, 0x48B590, 3,
        0x48B676, GAME_10US_COMPACT, H_CALL, 0x48B590, 4,
        0x48B6AF, GAME_10US_COMPACT, H_CALL, 0x48B590, 5,
        0x48B6DF, GAME_10US_COMPACT, H_CALL, 0x48B590, 6,
        0x48B702, GAME_10US_COMPACT, H_CALL, 0x48B590, 7,
        0x48B730, GAME_10US_COMPACT, H_CALL, 0x48B590, 8,
        0x48B75E, GAME_10US_COMPACT, H_CALL, 0x48B590, 9,
        0x48B7B9, GAME_10US_COMPACT, H_CALL, 0x48B590, 10,
        0x48B904, GAME_10US_COMPACT, H_CALL, 0x48B590, 11,
        0x48B991, GAME_10US_COMPACT, H_CALL, 0x48B590, 12,
        0x48B9B4, GAME_10US_COMPACT, H_CALL, 0x48B590, 13,
        0x48B9FF, GAME_10US_COMPACT, H_CALL, 0x48B590, 14,
        0x48BA9B, GAME_10US_COMPACT, H_CALL, 0x48B590, 15,
        0x48BB54, GAME_10US_COMPACT, H_CALL, 0x48B590, 16,
        0x48BBAA, GAME_10US_COMPACT, H_CALL, 0x48B590, 17,
        0x48BC0E, GAME_10US_COMPACT, H_CALL, 0x48B590, 18,
        0x48BCCA, GAME_10US_COMPACT, H_CALL, 0x48B590, 19,
        0x48BD7F, GAME_10US_COMPACT, H_CALL, 0x48B590, 20,
        0x48BDA7, GAME_10US_COMPACT, H_CALL, 0x48B590, 21,
        0x48BDF1, GAME_10US_COMPACT, H_CALL, 0x48B590, 22,
        0x48BEF6, GAME_10US_COMPACT, H_CALL, 0x48B590, 23,
        0x48BFC7, GAME_10US_COMPACT, H_CALL, 0x48B590, 24,
        0x48BFE7, GAME_10US_COMPACT, H_CALL, 0x48B590, 25,
        0x48C02F, GAME_10US_COMPACT, H_CALL, 0x48B590, 26,
        0x48C07F, GAME_10US_COMPACT, H_CALL, 0x48B590, 27,
        0x48C0C7, GAME_10US_COMPACT, H_CALL, 0x48B590, 28,
        0x48C12E, GAME_10US_COMPACT, H_CALL, 0x48B590, 29,
        0x48C169, GAME_10US_COMPACT, H_CALL, 0x48B590, 30,
        0x48C1B4, GAME_10US_COMPACT, H_CALL, 0x48B590, 31,
        0x48C1E1, GAME_10US_COMPACT, H_CALL, 0x48B590, 32,
        0x48C20A, GAME_10US_COMPACT, H_CALL, 0x48B590, 33,
        0x48C21A, GAME_10US_COMPACT, H_CALL, 0x48B590, 34,
        0x48C248, GAME_10US_COMPACT, H_CALL, 0x48B590, 35,
        0x48C2A2, GAME_10US_COMPACT, H_CALL, 0x48B590, 36,
        0x48C2FC, GAME_10US_COMPACT, H_CALL, 0x48B590, 37,
        0x48C41C, GAME_10US_COMPACT, H_CALL, 0x48B590, 38,
        0x48C460, GAME_10US_COMPACT, H_CALL, 0x48B590, 39,
        0x48C4A1, GAME_10US_COMPACT, H_CALL, 0x48B590, 40,
        0x48C53C, GAME_10US_COMPACT, H_CALL, 0x48B590, 41,
        0x48C58D, GAME_10US_COMPACT, H_CALL, 0x48B590, 42,
        0x48C65E, GAME_10US_COMPACT, H_CALL, 0x48B590, 43,
        0x48C6A1, GAME_10US_COMPACT, H_CALL, 0x48B590, 44,
        0x48C6D5, GAME_10US_COMPACT, H_CALL, 0x48B590, 45,
        0x48C76C, GAME_10US_COMPACT, H_CALL, 0x48B590, 46,
        0x48C7DB, GAME_10US_COMPACT, H_CALL, 0x48B590, 47,
        0x48C836, GAME_10US_COMPACT, H_CALL, 0x48B590, 48,
        0x48C867, GAME_10US_COMPACT, H_CALL, 0x48B590, 49,
        0x48C9F8, GAME_10US_COMPACT, H_CALL, 0x48B590, 50,
        0x48CA20, GAME_10US_COMPACT, H_CALL, 0x48B590, 51,
        0x48CA48, GAME_10US_COMPACT, H_CALL, 0x48B590, 52,
        0x48CA8D, GAME_10US_COMPACT, H_CALL, 0x48B590, 53,
        0x48CB1A, GAME_10US_COMPACT, H_CALL, 0x48B590, 54,
        0x48CC05, GAME_10US_COMPACT, H_CALL, 0x48B590, 55,
        0x48CDFD, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 1,
        0x48CEDF, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 2,
        0x48CFA9, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 3,
        0x48D01B, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 4,
        0x48D093, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 5,
        0x48D0D6, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 6,
        0x48D15F, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 7,
        0x48D1E3, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 8,
        0x48D23D, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 9,
        0x48D27C, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 10,
        0x48D35A, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 11,
        0x48D3AE, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 12,
        0x48D4D2, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 13,
        0x48D531, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 14,
        0x48D5B4, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 15,
        0x48D5EC, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 16,
        0x48D625, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 17,
        0x48D677, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 18,
        0x48D6AB, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 19,
        0x48D6E1, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 20,
        0x48D72D, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 21,
        0x48D779, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 22,
        0x48D824, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 23,
        0x48D866, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 24,
        0x48D907, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 25,
        0x48D94E, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 26,
        0x48D9B6, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 27,
        0x48D9E6, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 28,
        0x48DA4E, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 29,
        0x48DAB9, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 30,
        0x48DAFD, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 31,
        0x48DB41, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 32,
        0x48DC08, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 33,
        0x48DC43, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 34,
        0x48DCBB, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 35,
        0x48EAE2, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48EB01, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48EB21, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x48EB46, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 4,
        0x48EBF8, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 5,
        0x48EC8E, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 6,
        0x48ECAE, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 7,
        0x48EDBF, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 8,
        0x48EE3D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 9,
        0x48EE56, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 10,
        0x48EE9D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 11,
        0x48EEDD, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 12,
        0x48F000, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 13,
        0x48F081, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 14,
        0x48F182, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 15,
        0x48F264, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 16,
        0x48F2A6, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 17,
        0x48F33D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 18,
        0x48F465, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 19,
        0x48F4ED, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 20,
        0x48F743, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 21,
        0x48F834, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 22,
        0x48FB12, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 23,
        0x48FB86, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 24,
        0x48FCA1, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 25,
        0x48FCEB, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 26,
        0x48FD4E, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 27,
        0x48FD91, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 28,
        0x48FE13, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 29,
        0x48FF1D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 30,
        0x49000A, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 31,
        0x4900B6, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 32,
        0x490147, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 33,
        0x490183, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 34,
        0x4901DC, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 35,
        0x49029F, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 36,
        0x4902DB, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 37,
        0x490317, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 38,
        0x490370, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 39,
        0x49046F, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 40,
        0x490558, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 41,
        0x4905B0, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 42,
        0x49064D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 43,
        0x490766, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 44,
        0x4907D2, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 45,
        0x49090F, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 46,
        0x490996, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 47,
        0x4909D8, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 48,
        0x490A59, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 49,
        0x490AEA, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 50,
        0x490B82, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 51,
        0x490DF2, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x490E67, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x490EFB, GAME_10US_COMPACT, H_CALL, 0x490DB0, 3,
        0x490F4A, GAME_10US_COMPACT, H_CALL, 0x490DB0, 4,
        0x490FA4, GAME_10US_COMPACT, H_CALL, 0x490DB0, 5,
        0x490FB4, GAME_10US_COMPACT, H_CALL, 0x490DB0, 6,
        0x490FEA, GAME_10US_COMPACT, H_CALL, 0x490DB0, 7,
        0x49101C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 8,
        0x491047, GAME_10US_COMPACT, H_CALL, 0x490DB0, 9,
        0x491072, GAME_10US_COMPACT, H_CALL, 0x490DB0, 10,
        0x4910D2, GAME_10US_COMPACT, H_CALL, 0x490DB0, 11,
        0x491132, GAME_10US_COMPACT, H_CALL, 0x490DB0, 12,
        0x491193, GAME_10US_COMPACT, H_CALL, 0x490DB0, 13,
        0x4911F3, GAME_10US_COMPACT, H_CALL, 0x490DB0, 14,
        0x49129C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 15,
        0x4912F8, GAME_10US_COMPACT, H_CALL, 0x490DB0, 16,
        0x491380, GAME_10US_COMPACT, H_CALL, 0x490DB0, 17,
        0x491408, GAME_10US_COMPACT, H_CALL, 0x490DB0, 18,
        0x4914A9, GAME_10US_COMPACT, H_CALL, 0x490DB0, 19,
        0x491531, GAME_10US_COMPACT, H_CALL, 0x490DB0, 20,
        0x491579, GAME_10US_COMPACT, H_CALL, 0x490DB0, 21,
        0x4915F9, GAME_10US_COMPACT, H_CALL, 0x490DB0, 22,
        0x49162E, GAME_10US_COMPACT, H_CALL, 0x490DB0, 23,
        0x4916CE, GAME_10US_COMPACT, H_CALL, 0x490DB0, 24,
        0x49172B, GAME_10US_COMPACT, H_CALL, 0x490DB0, 25,
        0x491768, GAME_10US_COMPACT, H_CALL, 0x490DB0, 26,
        0x491798, GAME_10US_COMPACT, H_CALL, 0x490DB0, 27,
        0x491806, GAME_10US_COMPACT, H_CALL, 0x490DB0, 28,
        0x491844, GAME_10US_COMPACT, H_CALL, 0x490DB0, 29,
        0x49190C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 30,
        0x49194F, GAME_10US_COMPACT, H_CALL, 0x490DB0, 31,
        0x4919B0, GAME_10US_COMPACT, H_CALL, 0x490DB0, 32,
        0x4919F1, GAME_10US_COMPACT, H_CALL, 0x490DB0, 33,
        0x491A4E, GAME_10US_COMPACT, H_CALL, 0x490DB0, 34,
        0x491AC0, GAME_10US_COMPACT, H_CALL, 0x490DB0, 35,
        0x491C37, GAME_10US_COMPACT, H_CALL, 0x490DB0, 36,
        0x491C83, GAME_10US_COMPACT, H_CALL, 0x490DB0, 37,
        0x492003, GAME_10US_COMPACT, H_CALL, 0x490DB0, 38,
        0x49205C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 39,
        0x4920A1, GAME_10US_COMPACT, H_CALL, 0x490DB0, 40,
        0x4920C4, GAME_10US_COMPACT, H_CALL, 0x490DB0, 41,
        0x492109, GAME_10US_COMPACT, H_CALL, 0x490DB0, 42,
        0x492146, GAME_10US_COMPACT, H_CALL, 0x490DB0, 43,
        0x49216C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 44,
        0x49218C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 45,
        0x4921D1, GAME_10US_COMPACT, H_CALL, 0x490DB0, 46,
        0x49220E, GAME_10US_COMPACT, H_CALL, 0x490DB0, 47,
        0x49225C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 48,
        0x4922DC, GAME_10US_COMPACT, H_CALL, 0x490DB0, 49,
        0x4923BE, GAME_10US_COMPACT, H_CALL, 0x490DB0, 50,
        0x4926ED, GAME_10US_COMPACT, H_CALL, 0x490DB0, 51,
        0x49277E, GAME_10US_COMPACT, H_CALL, 0x490DB0, 52,
        0x4927D7, GAME_10US_COMPACT, H_CALL, 0x490DB0, 53,
        0x492841, GAME_10US_COMPACT, H_CALL, 0x490DB0, 54,
        0x4928A1, GAME_10US_COMPACT, H_CALL, 0x490DB0, 55,
        0x4928B1, GAME_10US_COMPACT, H_CALL, 0x490DB0, 56,
        0x492979, GAME_10US_COMPACT, H_CALL, 0x490DB0, 57,
        0x492A3A, GAME_10US_COMPACT, H_CALL, 0x490DB0, 58,
        0x494022, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x4940B1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x4940F7, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x49415F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x4941F9, GAME_10US_COMPACT, H_CALL, 0x493FE0, 5,
        0x49423A, GAME_10US_COMPACT, H_CALL, 0x493FE0, 6,
        0x494327, GAME_10US_COMPACT, H_CALL, 0x493FE0, 7,
        0x494365, GAME_10US_COMPACT, H_CALL, 0x493FE0, 8,
        0x4943A3, GAME_10US_COMPACT, H_CALL, 0x493FE0, 9,
        0x494406, GAME_10US_COMPACT, H_CALL, 0x493FE0, 10,
        0x494440, GAME_10US_COMPACT, H_CALL, 0x493FE0, 11,
        0x494474, GAME_10US_COMPACT, H_CALL, 0x493FE0, 12,
        0x4944A5, GAME_10US_COMPACT, H_CALL, 0x493FE0, 13,
        0x4944ED, GAME_10US_COMPACT, H_CALL, 0x493FE0, 14,
        0x4945D9, GAME_10US_COMPACT, H_CALL, 0x493FE0, 15,
        0x49467F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 16,
        0x4946E8, GAME_10US_COMPACT, H_CALL, 0x493FE0, 17,
        0x49476B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 18,
        0x49482F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 19,
        0x494848, GAME_10US_COMPACT, H_CALL, 0x493FE0, 20,
        0x49486C, GAME_10US_COMPACT, H_CALL, 0x493FE0, 21,
        0x4948F3, GAME_10US_COMPACT, H_CALL, 0x493FE0, 22,
        0x494A0B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 23,
        0x494A80, GAME_10US_COMPACT, H_CALL, 0x493FE0, 24,
        0x494B82, GAME_10US_COMPACT, H_CALL, 0x493FE0, 25,
        0x494BBE, GAME_10US_COMPACT, H_CALL, 0x493FE0, 26,
        0x494BFE, GAME_10US_COMPACT, H_CALL, 0x493FE0, 27,
        0x494CCA, GAME_10US_COMPACT, H_CALL, 0x493FE0, 28,
        0x494DCA, GAME_10US_COMPACT, H_CALL, 0x493FE0, 29,
        0x494E38, GAME_10US_COMPACT, H_CALL, 0x493FE0, 30,
        0x494EA8, GAME_10US_COMPACT, H_CALL, 0x493FE0, 31,
        0x494F21, GAME_10US_COMPACT, H_CALL, 0x493FE0, 32,
        0x494F89, GAME_10US_COMPACT, H_CALL, 0x493FE0, 33,
        0x49506A, GAME_10US_COMPACT, H_CALL, 0x493FE0, 34,
        0x495108, GAME_10US_COMPACT, H_CALL, 0x493FE0, 35,
        0x49518B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 36,
        0x495210, GAME_10US_COMPACT, H_CALL, 0x493FE0, 37,
        0x4952AD, GAME_10US_COMPACT, H_CALL, 0x493FE0, 38,
        0x49531F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 39,
        0x4953A1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 40,
        0x4953E1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 41,
        0x495429, GAME_10US_COMPACT, H_CALL, 0x493FE0, 42,
        0x4954E6, GAME_10US_COMPACT, H_CALL, 0x493FE0, 43,
        0x49557F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 44,
        0x49565B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 45,
        0x4956D7, GAME_10US_COMPACT, H_CALL, 0x493FE0, 46,
        0x49571D, GAME_10US_COMPACT, H_CALL, 0x493FE0, 47,
        0x495763, GAME_10US_COMPACT, H_CALL, 0x493FE0, 48,
        0x495793, GAME_10US_COMPACT, H_CALL, 0x493FE0, 49,
        0x495886, GAME_10US_COMPACT, H_CALL, 0x493FE0, 50,
        0x4958D6, GAME_10US_COMPACT, H_CALL, 0x493FE0, 51,
        0x495912, GAME_10US_COMPACT, H_CALL, 0x493FE0, 52,
        0x495A55, GAME_10US_COMPACT, H_CALL, 0x493FE0, 53,
        0x495AF8, GAME_10US_COMPACT, H_CALL, 0x493FE0, 54,
        0x495B48, GAME_10US_COMPACT, H_CALL, 0x493FE0, 55,
        0x495B84, GAME_10US_COMPACT, H_CALL, 0x493FE0, 56,
        0x495BB3, GAME_10US_COMPACT, H_CALL, 0x493FE0, 57,
        0x495C6E, GAME_10US_COMPACT, H_CALL, 0x493FE0, 58,
        0x495D2B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 59,
        0x495DB1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 60,
        0x496E65, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x496EBF, GAME_10US_COMPACT, H_CALL, 0x496E00, 2,
        0x496F63, GAME_10US_COMPACT, H_CALL, 0x496E00, 3,
        0x497081, GAME_10US_COMPACT, H_CALL, 0x496E00, 4,
        0x4971BC, GAME_10US_COMPACT, H_CALL, 0x496E00, 5,
        0x4971D5, GAME_10US_COMPACT, H_CALL, 0x496E00, 6,
        0x49722C, GAME_10US_COMPACT, H_CALL, 0x496E00, 7,
        0x497285, GAME_10US_COMPACT, H_CALL, 0x496E00, 8,
        0x4972E6, GAME_10US_COMPACT, H_CALL, 0x496E00, 9,
        0x49736E, GAME_10US_COMPACT, H_CALL, 0x496E00, 10,
        0x4973BD, GAME_10US_COMPACT, H_CALL, 0x496E00, 11,
        0x497448, GAME_10US_COMPACT, H_CALL, 0x496E00, 12,
        0x497509, GAME_10US_COMPACT, H_CALL, 0x496E00, 13,
        0x497561, GAME_10US_COMPACT, H_CALL, 0x496E00, 14,
        0x49759C, GAME_10US_COMPACT, H_CALL, 0x496E00, 15,
        0x4975E9, GAME_10US_COMPACT, H_CALL, 0x496E00, 16,
        0x497622, GAME_10US_COMPACT, H_CALL, 0x496E00, 17,
        0x49765A, GAME_10US_COMPACT, H_CALL, 0x496E00, 18,
        0x4976CC, GAME_10US_COMPACT, H_CALL, 0x496E00, 19,
        0x497773, GAME_10US_COMPACT, H_CALL, 0x496E00, 20,
        0x4977E7, GAME_10US_COMPACT, H_CALL, 0x496E00, 21,
        0x497856, GAME_10US_COMPACT, H_CALL, 0x496E00, 22,
        0x49790C, GAME_10US_COMPACT, H_CALL, 0x496E00, 23,
        0x497944, GAME_10US_COMPACT, H_CALL, 0x496E00, 24,
        0x49797C, GAME_10US_COMPACT, H_CALL, 0x496E00, 25,
        0x4979B8, GAME_10US_COMPACT, H_CALL, 0x496E00, 26,
        0x497A69, GAME_10US_COMPACT, H_CALL, 0x496E00, 27,
        0x497B79, GAME_10US_COMPACT, H_CALL, 0x496E00, 28,
        0x497BCB, GAME_10US_COMPACT, H_CALL, 0x496E00, 29,
        0x497C2A, GAME_10US_COMPACT, H_CALL, 0x496E00, 30,
        0x497C54, GAME_10US_COMPACT, H_CALL, 0x496E00, 31,
        0x497CDF, GAME_10US_COMPACT, H_CALL, 0x496E00, 32,
        0x497CFF, GAME_10US_COMPACT, H_CALL, 0x496E00, 33,
        0x497D58, GAME_10US_COMPACT, H_CALL, 0x496E00, 34,
        0x497DBC, GAME_10US_COMPACT, H_CALL, 0x496E00, 35,
        0x497DCC, GAME_10US_COMPACT, H_CALL, 0x496E00, 36,
        0x497E58, GAME_10US_COMPACT, H_CALL, 0x496E00, 37,
        0x497EFD, GAME_10US_COMPACT, H_CALL, 0x496E00, 38,
        0x497F55, GAME_10US_COMPACT, H_CALL, 0x496E00, 39,
        0x497F89, GAME_10US_COMPACT, H_CALL, 0x496E00, 40,
        0x498029, GAME_10US_COMPACT, H_CALL, 0x496E00, 41,
        0x49805E, GAME_10US_COMPACT, H_CALL, 0x496E00, 42,
        0x498094, GAME_10US_COMPACT, H_CALL, 0x496E00, 43,
        0x4980CD, GAME_10US_COMPACT, H_CALL, 0x496E00, 44,
        0x4980EB, GAME_10US_COMPACT, H_CALL, 0x496E00, 45,
        0x498105, GAME_10US_COMPACT, H_CALL, 0x496E00, 46,
        0x4981C2, GAME_10US_COMPACT, H_CALL, 0x496E00, 47,
        0x49825D, GAME_10US_COMPACT, H_CALL, 0x496E00, 48,
        0x4982F3, GAME_10US_COMPACT, H_CALL, 0x496E00, 49,
        0x498344, GAME_10US_COMPACT, H_CALL, 0x496E00, 50,
        0x49838C, GAME_10US_COMPACT, H_CALL, 0x496E00, 51,
        0x4985AA, GAME_10US_COMPACT, H_CALL, 0x496E00, 52,
        0x4985E8, GAME_10US_COMPACT, H_CALL, 0x496E00, 53,
        0x498628, GAME_10US_COMPACT, H_CALL, 0x496E00, 54,
        0x498658, GAME_10US_COMPACT, H_CALL, 0x496E00, 55,
        0x498691, GAME_10US_COMPACT, H_CALL, 0x496E00, 56,
        0x4986E0, GAME_10US_COMPACT, H_CALL, 0x496E00, 57,
        0x498710, GAME_10US_COMPACT, H_CALL, 0x496E00, 58,
        0x49873F, GAME_10US_COMPACT, H_CALL, 0x496E00, 59,
        0x49879A, GAME_10US_COMPACT, H_CALL, 0x496E00, 60,
        0x498805, GAME_10US_COMPACT, H_CALL, 0x496E00, 61,
        0x498841, GAME_10US_COMPACT, H_CALL, 0x496E00, 62,
        0x498872, GAME_10US_COMPACT, H_CALL, 0x496E00, 63,
        0x498891, GAME_10US_COMPACT, H_CALL, 0x496E00, 64,
        0x498904, GAME_10US_COMPACT, H_CALL, 0x496E00, 65,
        0x498A30, GAME_10US_COMPACT, H_CALL, 0x496E00, 66,
        0x498A4F, GAME_10US_COMPACT, H_CALL, 0x496E00, 67,
        0x498A8A, GAME_10US_COMPACT, H_CALL, 0x496E00, 68,
        0x498ABB, GAME_10US_COMPACT, H_CALL, 0x496E00, 69,
        0x498BE4, GAME_10US_COMPACT, H_CALL, 0x496E00, 70,
        0x498CA8, GAME_10US_COMPACT, H_CALL, 0x496E00, 71,
        0x498D7D, GAME_10US_COMPACT, H_CALL, 0x496E00, 72,
        0x498E7C, GAME_10US_COMPACT, H_CALL, 0x496E00, 73,
        0x498EAE, GAME_10US_COMPACT, H_CALL, 0x496E00, 74,
        0x498EDC, GAME_10US_COMPACT, H_CALL, 0x496E00, 75>;
    using def_t = void(CRunningScript *, short);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,short>, 0,1>;
META_END

META_BEGIN(CRunningScript::CollectNextParameterWithoutIncreasingPC)
    static int address;
    static int global_address;
    static const int id = 0x464250;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464250, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x471D36, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x4729C9, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x472A57, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x478783, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x47C61B, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47C6F1, GAME_10US_COMPACT, H_CALL, 0x47C100, 2,
        0x47CECA, GAME_10US_COMPACT, H_CALL, 0x47C100, 3,
        0x47CF08, GAME_10US_COMPACT, H_CALL, 0x47C100, 4,
        0x47CF30, GAME_10US_COMPACT, H_CALL, 0x47C100, 5,
        0x47CF97, GAME_10US_COMPACT, H_CALL, 0x47C100, 6,
        0x47E5E2, GAME_10US_COMPACT, H_CALL, 0x47E090, 1,
        0x47F703, GAME_10US_COMPACT, H_CALL, 0x47F370, 1,
        0x47F7A6, GAME_10US_COMPACT, H_CALL, 0x47F370, 2,
        0x4805B6, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1,
        0x4816DC, GAME_10US_COMPACT, H_CALL, 0x481300, 1,
        0x484B26, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x4854D3, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x48B1E9, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48BC51, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48CE62, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 1,
        0x48CF45, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 2,
        0x48DB86, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 3,
        0x4914C7, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x491871, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x491AC7, GAME_10US_COMPACT, H_CALL, 0x490DB0, 3,
        0x492269, GAME_10US_COMPACT, H_CALL, 0x490DB0, 4,
        0x494241, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x494A12, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x494A87, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x494B89, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x494BC5, GAME_10US_COMPACT, H_CALL, 0x493FE0, 5,
        0x494C05, GAME_10US_COMPACT, H_CALL, 0x493FE0, 6,
        0x494CD1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 7,
        0x497304, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x49744F, GAME_10US_COMPACT, H_CALL, 0x496E00, 2,
        0x4979BF, GAME_10US_COMPACT, H_CALL, 0x496E00, 3,
        0x497BE2, GAME_10US_COMPACT, H_CALL, 0x496E00, 4,
        0x497E5F, GAME_10US_COMPACT, H_CALL, 0x496E00, 5>;
    using def_t = tScriptParam(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::StoreParameters)
    static int address;
    static int global_address;
    static const int id = 0x464370;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464370, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4669D1, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x46774E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x46785B, GAME_10US_COMPACT, H_CALL, 0x466DE0, 2,
        0x467D9B, GAME_10US_COMPACT, H_CALL, 0x466DE0, 3,
        0x46821E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 4,
        0x46829D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 5,
        0x46959D, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x469745, GAME_10US_COMPACT, H_CALL, 0x469390, 2,
        0x469895, GAME_10US_COMPACT, H_CALL, 0x469390, 3,
        0x4699AF, GAME_10US_COMPACT, H_CALL, 0x469390, 4,
        0x469D97, GAME_10US_COMPACT, H_CALL, 0x469390, 5,
        0x46B565, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46B880, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x46B89A, GAME_10US_COMPACT, H_CALL, 0x46B460, 3,
        0x46B986, GAME_10US_COMPACT, H_CALL, 0x46B460, 4,
        0x46B9B9, GAME_10US_COMPACT, H_CALL, 0x46B460, 5,
        0x46B9EC, GAME_10US_COMPACT, H_CALL, 0x46B460, 6,
        0x46BB04, GAME_10US_COMPACT, H_CALL, 0x46B460, 7,
        0x46BBAD, GAME_10US_COMPACT, H_CALL, 0x46B460, 8,
        0x46BBC7, GAME_10US_COMPACT, H_CALL, 0x46B460, 9,
        0x46BC24, GAME_10US_COMPACT, H_CALL, 0x46B460, 10,
        0x46BD59, GAME_10US_COMPACT, H_CALL, 0x46B460, 11,
        0x46BE03, GAME_10US_COMPACT, H_CALL, 0x46B460, 12,
        0x46BE24, GAME_10US_COMPACT, H_CALL, 0x46B460, 13,
        0x46C043, GAME_10US_COMPACT, H_CALL, 0x46B460, 14,
        0x46C112, GAME_10US_COMPACT, H_CALL, 0x46B460, 15,
        0x46C13D, GAME_10US_COMPACT, H_CALL, 0x46B460, 16,
        0x46C216, GAME_10US_COMPACT, H_CALL, 0x46B460, 17,
        0x46C3F8, GAME_10US_COMPACT, H_CALL, 0x46B460, 18,
        0x46C45C, GAME_10US_COMPACT, H_CALL, 0x46B460, 19,
        0x46C486, GAME_10US_COMPACT, H_CALL, 0x46B460, 20,
        0x46C4AB, GAME_10US_COMPACT, H_CALL, 0x46B460, 21,
        0x46C73B, GAME_10US_COMPACT, H_CALL, 0x46B460, 22,
        0x46C84E, GAME_10US_COMPACT, H_CALL, 0x46B460, 23,
        0x46E166, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x46E33C, GAME_10US_COMPACT, H_CALL, 0x46D050, 2,
        0x46EB8B, GAME_10US_COMPACT, H_CALL, 0x46D050, 3,
        0x46EBCF, GAME_10US_COMPACT, H_CALL, 0x46D050, 4,
        0x46ED8D, GAME_10US_COMPACT, H_CALL, 0x46D050, 5,
        0x470B20, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x470C75, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x470D9E, GAME_10US_COMPACT, H_CALL, 0x470A90, 3,
        0x470E4F, GAME_10US_COMPACT, H_CALL, 0x470A90, 4,
        0x470ECD, GAME_10US_COMPACT, H_CALL, 0x470A90, 5,
        0x47124E, GAME_10US_COMPACT, H_CALL, 0x470A90, 6,
        0x471714, GAME_10US_COMPACT, H_CALL, 0x470A90, 7,
        0x47172E, GAME_10US_COMPACT, H_CALL, 0x470A90, 8,
        0x471D6E, GAME_10US_COMPACT, H_CALL, 0x470A90, 9,
        0x471E00, GAME_10US_COMPACT, H_CALL, 0x470A90, 10,
        0x47235E, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x472998, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x472A05, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x472A93, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x472C57, GAME_10US_COMPACT, H_CALL, 0x472310, 5,
        0x472FAC, GAME_10US_COMPACT, H_CALL, 0x472310, 6,
        0x472FC8, GAME_10US_COMPACT, H_CALL, 0x472310, 7,
        0x473344, GAME_10US_COMPACT, H_CALL, 0x472310, 8,
        0x47378F, GAME_10US_COMPACT, H_CALL, 0x472310, 9,
        0x473825, GAME_10US_COMPACT, H_CALL, 0x472310, 10,
        0x473D97, GAME_10US_COMPACT, H_CALL, 0x472310, 11,
        0x474BC8, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x474BFE, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x4754AC, GAME_10US_COMPACT, H_CALL, 0x474900, 3,
        0x4754F4, GAME_10US_COMPACT, H_CALL, 0x474900, 4,
        0x4755C4, GAME_10US_COMPACT, H_CALL, 0x474900, 5,
        0x475626, GAME_10US_COMPACT, H_CALL, 0x474900, 6,
        0x475655, GAME_10US_COMPACT, H_CALL, 0x474900, 7,
        0x47598A, GAME_10US_COMPACT, H_CALL, 0x474900, 8,
        0x4759B0, GAME_10US_COMPACT, H_CALL, 0x474900, 9,
        0x475B8A, GAME_10US_COMPACT, H_CALL, 0x474900, 10,
        0x475DA5, GAME_10US_COMPACT, H_CALL, 0x474900, 11,
        0x476082, GAME_10US_COMPACT, H_CALL, 0x474900, 12,
        0x47649C, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1,
        0x47658D, GAME_10US_COMPACT, H_CALL, 0x4762D0, 2,
        0x4765FF, GAME_10US_COMPACT, H_CALL, 0x4762D0, 3,
        0x4769E0, GAME_10US_COMPACT, H_CALL, 0x4762D0, 4,
        0x476BCB, GAME_10US_COMPACT, H_CALL, 0x4762D0, 5,
        0x476E5B, GAME_10US_COMPACT, H_CALL, 0x4762D0, 6,
        0x476ED6, GAME_10US_COMPACT, H_CALL, 0x4762D0, 7,
        0x4776B0, GAME_10US_COMPACT, H_CALL, 0x4762D0, 8,
        0x477994, GAME_10US_COMPACT, H_CALL, 0x4762D0, 9,
        0x477BC6, GAME_10US_COMPACT, H_CALL, 0x4762D0, 10,
        0x477BE9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 11,
        0x478193, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x478215, GAME_10US_COMPACT, H_CALL, 0x478000, 2,
        0x47835C, GAME_10US_COMPACT, H_CALL, 0x478000, 3,
        0x47838C, GAME_10US_COMPACT, H_CALL, 0x478000, 4,
        0x4783AA, GAME_10US_COMPACT, H_CALL, 0x478000, 5,
        0x4783DA, GAME_10US_COMPACT, H_CALL, 0x478000, 6,
        0x4783F8, GAME_10US_COMPACT, H_CALL, 0x478000, 7,
        0x478416, GAME_10US_COMPACT, H_CALL, 0x478000, 8,
        0x478434, GAME_10US_COMPACT, H_CALL, 0x478000, 9,
        0x478452, GAME_10US_COMPACT, H_CALL, 0x478000, 10,
        0x478470, GAME_10US_COMPACT, H_CALL, 0x478000, 11,
        0x47848E, GAME_10US_COMPACT, H_CALL, 0x478000, 12,
        0x4784AC, GAME_10US_COMPACT, H_CALL, 0x478000, 13,
        0x4784DA, GAME_10US_COMPACT, H_CALL, 0x478000, 14,
        0x4787F9, GAME_10US_COMPACT, H_CALL, 0x478000, 15,
        0x4788EF, GAME_10US_COMPACT, H_CALL, 0x478000, 16,
        0x478A07, GAME_10US_COMPACT, H_CALL, 0x478000, 17,
        0x478C10, GAME_10US_COMPACT, H_CALL, 0x478000, 18,
        0x478C47, GAME_10US_COMPACT, H_CALL, 0x478000, 19,
        0x478D5B, GAME_10US_COMPACT, H_CALL, 0x478000, 20,
        0x4792D9, GAME_10US_COMPACT, H_CALL, 0x478000, 21,
        0x4794D3, GAME_10US_COMPACT, H_CALL, 0x478000, 22,
        0x4794F4, GAME_10US_COMPACT, H_CALL, 0x478000, 23,
        0x47952A, GAME_10US_COMPACT, H_CALL, 0x478000, 24,
        0x479925, GAME_10US_COMPACT, H_CALL, 0x478000, 25,
        0x47A11D, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x47A1DB, GAME_10US_COMPACT, H_CALL, 0x479DA0, 2,
        0x47A502, GAME_10US_COMPACT, H_CALL, 0x479DA0, 3,
        0x47A640, GAME_10US_COMPACT, H_CALL, 0x479DA0, 4,
        0x47ABB0, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x47AEC3, GAME_10US_COMPACT, H_CALL, 0x47A760, 2,
        0x47AFC6, GAME_10US_COMPACT, H_CALL, 0x47A760, 3,
        0x47B16D, GAME_10US_COMPACT, H_CALL, 0x47A760, 4,
        0x47B4FD, GAME_10US_COMPACT, H_CALL, 0x47A760, 5,
        0x47B57B, GAME_10US_COMPACT, H_CALL, 0x47A760, 6,
        0x47B750, GAME_10US_COMPACT, H_CALL, 0x47A760, 7,
        0x47B96B, GAME_10US_COMPACT, H_CALL, 0x47A760, 8,
        0x47C220, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47C651, GAME_10US_COMPACT, H_CALL, 0x47C100, 2,
        0x47C755, GAME_10US_COMPACT, H_CALL, 0x47C100, 3,
        0x47CB35, GAME_10US_COMPACT, H_CALL, 0x47C100, 4,
        0x47CC55, GAME_10US_COMPACT, H_CALL, 0x47C100, 5,
        0x47CFFC, GAME_10US_COMPACT, H_CALL, 0x47C100, 6,
        0x47D08A, GAME_10US_COMPACT, H_CALL, 0x47C100, 7,
        0x47D5AE, GAME_10US_COMPACT, H_CALL, 0x47D210, 1,
        0x47D9D4, GAME_10US_COMPACT, H_CALL, 0x47D210, 2,
        0x47DD5A, GAME_10US_COMPACT, H_CALL, 0x47D210, 3,
        0x47DDA0, GAME_10US_COMPACT, H_CALL, 0x47D210, 4,
        0x47E180, GAME_10US_COMPACT, H_CALL, 0x47E090, 1,
        0x47E316, GAME_10US_COMPACT, H_CALL, 0x47E090, 2,
        0x47E34C, GAME_10US_COMPACT, H_CALL, 0x47E090, 3,
        0x47E3AD, GAME_10US_COMPACT, H_CALL, 0x47E090, 4,
        0x47E3EF, GAME_10US_COMPACT, H_CALL, 0x47E090, 5,
        0x47E647, GAME_10US_COMPACT, H_CALL, 0x47E090, 6,
        0x47EA59, GAME_10US_COMPACT, H_CALL, 0x47E090, 7,
        0x47F3A7, GAME_10US_COMPACT, H_CALL, 0x47F370, 1,
        0x47F4A5, GAME_10US_COMPACT, H_CALL, 0x47F370, 2,
        0x47F608, GAME_10US_COMPACT, H_CALL, 0x47F370, 3,
        0x47F810, GAME_10US_COMPACT, H_CALL, 0x47F370, 4,
        0x47FBBE, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1,
        0x47FED8, GAME_10US_COMPACT, H_CALL, 0x47FA30, 2,
        0x47FF6F, GAME_10US_COMPACT, H_CALL, 0x47FA30, 3,
        0x48050D, GAME_10US_COMPACT, H_CALL, 0x47FA30, 4,
        0x480669, GAME_10US_COMPACT, H_CALL, 0x47FA30, 5,
        0x4806E7, GAME_10US_COMPACT, H_CALL, 0x47FA30, 6,
        0x48074D, GAME_10US_COMPACT, H_CALL, 0x47FA30, 7,
        0x480969, GAME_10US_COMPACT, H_CALL, 0x47FA30, 8,
        0x48099E, GAME_10US_COMPACT, H_CALL, 0x47FA30, 9,
        0x4809F0, GAME_10US_COMPACT, H_CALL, 0x47FA30, 10,
        0x480A43, GAME_10US_COMPACT, H_CALL, 0x47FA30, 11,
        0x4814DA, GAME_10US_COMPACT, H_CALL, 0x481300, 1,
        0x48160F, GAME_10US_COMPACT, H_CALL, 0x481300, 2,
        0x481755, GAME_10US_COMPACT, H_CALL, 0x481300, 3,
        0x483500, GAME_10US_COMPACT, H_CALL, 0x481300, 4,
        0x484B6B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x484C4B, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x485367, GAME_10US_COMPACT, H_CALL, 0x483BD0, 3,
        0x48550A, GAME_10US_COMPACT, H_CALL, 0x483BD0, 4,
        0x489677, GAME_10US_COMPACT, H_CALL, 0x489500, 1,
        0x489825, GAME_10US_COMPACT, H_CALL, 0x489500, 2,
        0x489B47, GAME_10US_COMPACT, H_CALL, 0x489500, 3,
        0x489C3C, GAME_10US_COMPACT, H_CALL, 0x489500, 4,
        0x489DA8, GAME_10US_COMPACT, H_CALL, 0x489500, 5,
        0x489EF9, GAME_10US_COMPACT, H_CALL, 0x489500, 6,
        0x489FDF, GAME_10US_COMPACT, H_CALL, 0x489500, 7,
        0x48A3F8, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48A7A0, GAME_10US_COMPACT, H_CALL, 0x48A320, 2,
        0x48A9AD, GAME_10US_COMPACT, H_CALL, 0x48A320, 3,
        0x48A9CF, GAME_10US_COMPACT, H_CALL, 0x48A320, 4,
        0x48AA34, GAME_10US_COMPACT, H_CALL, 0x48A320, 5,
        0x48AB05, GAME_10US_COMPACT, H_CALL, 0x48A320, 6,
        0x48AF1F, GAME_10US_COMPACT, H_CALL, 0x48A320, 7,
        0x48B189, GAME_10US_COMPACT, H_CALL, 0x48A320, 8,
        0x48B254, GAME_10US_COMPACT, H_CALL, 0x48A320, 9,
        0x48B7A9, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48B8E8, GAME_10US_COMPACT, H_CALL, 0x48B590, 2,
        0x48BB44, GAME_10US_COMPACT, H_CALL, 0x48B590, 3,
        0x48BCBA, GAME_10US_COMPACT, H_CALL, 0x48B590, 4,
        0x48C159, GAME_10US_COMPACT, H_CALL, 0x48B590, 5,
        0x48C736, GAME_10US_COMPACT, H_CALL, 0x48B590, 6,
        0x48C9C8, GAME_10US_COMPACT, H_CALL, 0x48B590, 7,
        0x48CB0A, GAME_10US_COMPACT, H_CALL, 0x48B590, 8,
        0x48CB61, GAME_10US_COMPACT, H_CALL, 0x48B590, 9,
        0x48CECA, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 1,
        0x48D7EE, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 2,
        0x48DBF3, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 3,
        0x48EDAF, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48EFF0, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48F04B, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x48F32D, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 4,
        0x48F773, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 5,
        0x48FAE0, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 6,
        0x4913E9, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x491500, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x4917F6, GAME_10US_COMPACT, H_CALL, 0x490DB0, 3,
        0x4918E2, GAME_10US_COMPACT, H_CALL, 0x490DB0, 4,
        0x4918FC, GAME_10US_COMPACT, H_CALL, 0x490DB0, 5,
        0x491C27, GAME_10US_COMPACT, H_CALL, 0x490DB0, 6,
        0x491FD9, GAME_10US_COMPACT, H_CALL, 0x490DB0, 7,
        0x491FF3, GAME_10US_COMPACT, H_CALL, 0x490DB0, 8,
        0x49224C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 9,
        0x4922AF, GAME_10US_COMPACT, H_CALL, 0x490DB0, 10,
        0x49412E, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x49414F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x4942FD, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x494317, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x494464, GAME_10US_COMPACT, H_CALL, 0x493FE0, 5,
        0x494495, GAME_10US_COMPACT, H_CALL, 0x493FE0, 6,
        0x494654, GAME_10US_COMPACT, H_CALL, 0x493FE0, 7,
        0x49466F, GAME_10US_COMPACT, H_CALL, 0x493FE0, 8,
        0x49475B, GAME_10US_COMPACT, H_CALL, 0x493FE0, 9,
        0x494A62, GAME_10US_COMPACT, H_CALL, 0x493FE0, 10,
        0x494DBA, GAME_10US_COMPACT, H_CALL, 0x493FE0, 11,
        0x495AE8, GAME_10US_COMPACT, H_CALL, 0x493FE0, 12,
        0x495DA4, GAME_10US_COMPACT, H_CALL, 0x493FE0, 13,
        0x495DD8, GAME_10US_COMPACT, H_CALL, 0x493FE0, 14,
        0x497275, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x49733D, GAME_10US_COMPACT, H_CALL, 0x496E00, 2,
        0x4974F9, GAME_10US_COMPACT, H_CALL, 0x496E00, 3,
        0x497934, GAME_10US_COMPACT, H_CALL, 0x496E00, 4,
        0x497C1A, GAME_10US_COMPACT, H_CALL, 0x496E00, 5,
        0x49837C, GAME_10US_COMPACT, H_CALL, 0x496E00, 6,
        0x4983EA, GAME_10US_COMPACT, H_CALL, 0x496E00, 7,
        0x498404, GAME_10US_COMPACT, H_CALL, 0x496E00, 8,
        0x49841E, GAME_10US_COMPACT, H_CALL, 0x496E00, 9,
        0x498438, GAME_10US_COMPACT, H_CALL, 0x496E00, 10,
        0x498452, GAME_10US_COMPACT, H_CALL, 0x496E00, 11,
        0x49846C, GAME_10US_COMPACT, H_CALL, 0x496E00, 12,
        0x498496, GAME_10US_COMPACT, H_CALL, 0x496E00, 13,
        0x4984B0, GAME_10US_COMPACT, H_CALL, 0x496E00, 14,
        0x4984CA, GAME_10US_COMPACT, H_CALL, 0x496E00, 15,
        0x4984E4, GAME_10US_COMPACT, H_CALL, 0x496E00, 16,
        0x4984FE, GAME_10US_COMPACT, H_CALL, 0x496E00, 17,
        0x498518, GAME_10US_COMPACT, H_CALL, 0x496E00, 18,
        0x498532, GAME_10US_COMPACT, H_CALL, 0x496E00, 19,
        0x49854C, GAME_10US_COMPACT, H_CALL, 0x496E00, 20,
        0x498566, GAME_10US_COMPACT, H_CALL, 0x496E00, 21,
        0x498580, GAME_10US_COMPACT, H_CALL, 0x496E00, 22,
        0x49859A, GAME_10US_COMPACT, H_CALL, 0x496E00, 23,
        0x4988F4, GAME_10US_COMPACT, H_CALL, 0x496E00, 24,
        0x498A14, GAME_10US_COMPACT, H_CALL, 0x496E00, 25,
        0x498C98, GAME_10US_COMPACT, H_CALL, 0x496E00, 26>;
    using def_t = void(CRunningScript *, short);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,short>, 0,1>;
META_END

META_BEGIN(CRunningScript::ReadParametersForNewlyStartedScript)
    static int address;
    static int global_address;
    static const int id = 0x464500;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464500, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x466846, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x476775, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1>;
    using def_t = void(CRunningScript *, CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,CRunningScript *>, 0,1>;
META_END

META_BEGIN(CRunningScript::GetIndexOfGlobalVariable)
    static int address;
    static int global_address;
    static const int id = 0x464700;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464700, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x471760, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x472090, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x47C286, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47C2D4, GAME_10US_COMPACT, H_CALL, 0x47C100, 2,
        0x47C2F3, GAME_10US_COMPACT, H_CALL, 0x47C100, 3,
        0x484C59, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x484CB5, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x48C531, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48EE92, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x4947CB, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x4947E7, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x494803, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3>;
    using def_t = short(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::GetPointerToScriptVariable)
    static int address;
    static int global_address;
    static const int id = 0x464790;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464790, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x465F2A, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x465F5A, GAME_10US_COMPACT, H_CALL, 0x465E60, 2,
        0x465F8B, GAME_10US_COMPACT, H_CALL, 0x465E60, 3,
        0x465FC3, GAME_10US_COMPACT, H_CALL, 0x465E60, 4,
        0x465FE6, GAME_10US_COMPACT, H_CALL, 0x465E60, 5,
        0x466019, GAME_10US_COMPACT, H_CALL, 0x465E60, 6,
        0x466040, GAME_10US_COMPACT, H_CALL, 0x465E60, 7,
        0x466070, GAME_10US_COMPACT, H_CALL, 0x465E60, 8,
        0x466091, GAME_10US_COMPACT, H_CALL, 0x465E60, 9,
        0x4660B4, GAME_10US_COMPACT, H_CALL, 0x465E60, 10,
        0x4660D5, GAME_10US_COMPACT, H_CALL, 0x465E60, 11,
        0x46610D, GAME_10US_COMPACT, H_CALL, 0x465E60, 12,
        0x46612F, GAME_10US_COMPACT, H_CALL, 0x465E60, 13,
        0x466150, GAME_10US_COMPACT, H_CALL, 0x465E60, 14,
        0x466172, GAME_10US_COMPACT, H_CALL, 0x465E60, 15,
        0x466193, GAME_10US_COMPACT, H_CALL, 0x465E60, 16,
        0x4661B5, GAME_10US_COMPACT, H_CALL, 0x465E60, 17,
        0x4661D6, GAME_10US_COMPACT, H_CALL, 0x465E60, 18,
        0x466214, GAME_10US_COMPACT, H_CALL, 0x465E60, 19,
        0x466259, GAME_10US_COMPACT, H_CALL, 0x465E60, 20,
        0x466293, GAME_10US_COMPACT, H_CALL, 0x465E60, 21,
        0x4662C6, GAME_10US_COMPACT, H_CALL, 0x465E60, 22,
        0x4662D1, GAME_10US_COMPACT, H_CALL, 0x465E60, 23,
        0x466300, GAME_10US_COMPACT, H_CALL, 0x465E60, 24,
        0x46630D, GAME_10US_COMPACT, H_CALL, 0x465E60, 25,
        0x46631E, GAME_10US_COMPACT, H_CALL, 0x465E60, 26,
        0x466356, GAME_10US_COMPACT, H_CALL, 0x465E60, 27,
        0x466398, GAME_10US_COMPACT, H_CALL, 0x465E60, 28,
        0x4663BA, GAME_10US_COMPACT, H_CALL, 0x465E60, 29,
        0x4663D0, GAME_10US_COMPACT, H_CALL, 0x465E60, 30,
        0x4663DB, GAME_10US_COMPACT, H_CALL, 0x465E60, 31,
        0x4663EA, GAME_10US_COMPACT, H_CALL, 0x465E60, 32,
        0x4663F5, GAME_10US_COMPACT, H_CALL, 0x465E60, 33,
        0x46640C, GAME_10US_COMPACT, H_CALL, 0x465E60, 34,
        0x466417, GAME_10US_COMPACT, H_CALL, 0x465E60, 35,
        0x466429, GAME_10US_COMPACT, H_CALL, 0x465E60, 36,
        0x466434, GAME_10US_COMPACT, H_CALL, 0x465E60, 37,
        0x466446, GAME_10US_COMPACT, H_CALL, 0x465E60, 38,
        0x46646B, GAME_10US_COMPACT, H_CALL, 0x465E60, 39,
        0x466498, GAME_10US_COMPACT, H_CALL, 0x465E60, 40,
        0x4664BA, GAME_10US_COMPACT, H_CALL, 0x465E60, 41,
        0x4664D9, GAME_10US_COMPACT, H_CALL, 0x465E60, 42,
        0x4664E6, GAME_10US_COMPACT, H_CALL, 0x465E60, 43,
        0x4664F3, GAME_10US_COMPACT, H_CALL, 0x465E60, 44,
        0x4664FE, GAME_10US_COMPACT, H_CALL, 0x465E60, 45,
        0x466515, GAME_10US_COMPACT, H_CALL, 0x465E60, 46,
        0x46653B, GAME_10US_COMPACT, H_CALL, 0x465E60, 47,
        0x466568, GAME_10US_COMPACT, H_CALL, 0x465E60, 48,
        0x466580, GAME_10US_COMPACT, H_CALL, 0x465E60, 49,
        0x46659B, GAME_10US_COMPACT, H_CALL, 0x465E60, 50,
        0x4665A6, GAME_10US_COMPACT, H_CALL, 0x465E60, 51,
        0x4665BD, GAME_10US_COMPACT, H_CALL, 0x465E60, 52,
        0x4665C8, GAME_10US_COMPACT, H_CALL, 0x465E60, 53,
        0x4665F3, GAME_10US_COMPACT, H_CALL, 0x465E60, 54,
        0x4665FE, GAME_10US_COMPACT, H_CALL, 0x465E60, 55,
        0x466615, GAME_10US_COMPACT, H_CALL, 0x465E60, 56,
        0x466620, GAME_10US_COMPACT, H_CALL, 0x465E60, 57,
        0x466637, GAME_10US_COMPACT, H_CALL, 0x465E60, 58,
        0x46665C, GAME_10US_COMPACT, H_CALL, 0x465E60, 59,
        0x466682, GAME_10US_COMPACT, H_CALL, 0x465E60, 60,
        0x46668F, GAME_10US_COMPACT, H_CALL, 0x465E60, 61,
        0x46669A, GAME_10US_COMPACT, H_CALL, 0x465E60, 62,
        0x4666B1, GAME_10US_COMPACT, H_CALL, 0x465E60, 63,
        0x4666BC, GAME_10US_COMPACT, H_CALL, 0x465E60, 64,
        0x4666D3, GAME_10US_COMPACT, H_CALL, 0x465E60, 65,
        0x4666F1, GAME_10US_COMPACT, H_CALL, 0x465E60, 66,
        0x46670F, GAME_10US_COMPACT, H_CALL, 0x465E60, 67,
        0x46671A, GAME_10US_COMPACT, H_CALL, 0x465E60, 68,
        0x466741, GAME_10US_COMPACT, H_CALL, 0x465E60, 69,
        0x46674C, GAME_10US_COMPACT, H_CALL, 0x465E60, 70,
        0x466774, GAME_10US_COMPACT, H_CALL, 0x465E60, 71,
        0x46677F, GAME_10US_COMPACT, H_CALL, 0x465E60, 72,
        0x466A33, GAME_10US_COMPACT, H_CALL, 0x465E60, 73,
        0x466A43, GAME_10US_COMPACT, H_CALL, 0x465E60, 74,
        0x466A4E, GAME_10US_COMPACT, H_CALL, 0x465E60, 75,
        0x466A72, GAME_10US_COMPACT, H_CALL, 0x465E60, 76,
        0x466A7D, GAME_10US_COMPACT, H_CALL, 0x465E60, 77,
        0x466A9F, GAME_10US_COMPACT, H_CALL, 0x465E60, 78,
        0x466AAA, GAME_10US_COMPACT, H_CALL, 0x465E60, 79,
        0x466ACE, GAME_10US_COMPACT, H_CALL, 0x465E60, 80,
        0x466AD9, GAME_10US_COMPACT, H_CALL, 0x465E60, 81,
        0x466AFB, GAME_10US_COMPACT, H_CALL, 0x465E60, 82,
        0x466B06, GAME_10US_COMPACT, H_CALL, 0x465E60, 83,
        0x466B2A, GAME_10US_COMPACT, H_CALL, 0x465E60, 84,
        0x466B35, GAME_10US_COMPACT, H_CALL, 0x465E60, 85,
        0x466B57, GAME_10US_COMPACT, H_CALL, 0x465E60, 86,
        0x466B62, GAME_10US_COMPACT, H_CALL, 0x465E60, 87,
        0x466B86, GAME_10US_COMPACT, H_CALL, 0x465E60, 88,
        0x466B91, GAME_10US_COMPACT, H_CALL, 0x465E60, 89,
        0x466BB3, GAME_10US_COMPACT, H_CALL, 0x465E60, 90,
        0x466BBE, GAME_10US_COMPACT, H_CALL, 0x465E60, 91,
        0x466BE2, GAME_10US_COMPACT, H_CALL, 0x465E60, 92,
        0x466BED, GAME_10US_COMPACT, H_CALL, 0x465E60, 93,
        0x466C0F, GAME_10US_COMPACT, H_CALL, 0x465E60, 94,
        0x466C1A, GAME_10US_COMPACT, H_CALL, 0x465E60, 95,
        0x466E17, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x466E22, GAME_10US_COMPACT, H_CALL, 0x466DE0, 2,
        0x466E44, GAME_10US_COMPACT, H_CALL, 0x466DE0, 3,
        0x466E4F, GAME_10US_COMPACT, H_CALL, 0x466DE0, 4,
        0x466E73, GAME_10US_COMPACT, H_CALL, 0x466DE0, 5,
        0x466E7E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 6,
        0x466EA0, GAME_10US_COMPACT, H_CALL, 0x466DE0, 7,
        0x466EAB, GAME_10US_COMPACT, H_CALL, 0x466DE0, 8,
        0x466ECF, GAME_10US_COMPACT, H_CALL, 0x466DE0, 9,
        0x466EDA, GAME_10US_COMPACT, H_CALL, 0x466DE0, 10,
        0x466EFF, GAME_10US_COMPACT, H_CALL, 0x466DE0, 11,
        0x466F0A, GAME_10US_COMPACT, H_CALL, 0x466DE0, 12,
        0x466F2E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 13,
        0x466F39, GAME_10US_COMPACT, H_CALL, 0x466DE0, 14,
        0x466F5E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 15,
        0x466F69, GAME_10US_COMPACT, H_CALL, 0x466DE0, 16,
        0x466F8D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 17,
        0x466F98, GAME_10US_COMPACT, H_CALL, 0x466DE0, 18,
        0x466FBD, GAME_10US_COMPACT, H_CALL, 0x466DE0, 19,
        0x466FC8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 20,
        0x466FEC, GAME_10US_COMPACT, H_CALL, 0x466DE0, 21,
        0x466FF7, GAME_10US_COMPACT, H_CALL, 0x466DE0, 22,
        0x46701C, GAME_10US_COMPACT, H_CALL, 0x466DE0, 23,
        0x467027, GAME_10US_COMPACT, H_CALL, 0x466DE0, 24,
        0x46704B, GAME_10US_COMPACT, H_CALL, 0x466DE0, 25,
        0x467056, GAME_10US_COMPACT, H_CALL, 0x466DE0, 26,
        0x46707D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 27,
        0x467088, GAME_10US_COMPACT, H_CALL, 0x466DE0, 28,
        0x4670AC, GAME_10US_COMPACT, H_CALL, 0x466DE0, 29,
        0x4670B9, GAME_10US_COMPACT, H_CALL, 0x466DE0, 30,
        0x4670C4, GAME_10US_COMPACT, H_CALL, 0x466DE0, 31,
        0x4670E8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 32,
        0x4670F8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 33,
        0x467103, GAME_10US_COMPACT, H_CALL, 0x466DE0, 34,
        0x46712E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 35,
        0x467139, GAME_10US_COMPACT, H_CALL, 0x466DE0, 36,
        0x46715D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 37,
        0x46719A, GAME_10US_COMPACT, H_CALL, 0x466DE0, 38,
        0x4671AB, GAME_10US_COMPACT, H_CALL, 0x466DE0, 39,
        0x4671B6, GAME_10US_COMPACT, H_CALL, 0x466DE0, 40,
        0x4671C9, GAME_10US_COMPACT, H_CALL, 0x466DE0, 41,
        0x4671D4, GAME_10US_COMPACT, H_CALL, 0x466DE0, 42,
        0x4671E7, GAME_10US_COMPACT, H_CALL, 0x466DE0, 43,
        0x467212, GAME_10US_COMPACT, H_CALL, 0x466DE0, 44,
        0x467223, GAME_10US_COMPACT, H_CALL, 0x466DE0, 45,
        0x467230, GAME_10US_COMPACT, H_CALL, 0x466DE0, 46,
        0x46723B, GAME_10US_COMPACT, H_CALL, 0x466DE0, 47,
        0x467253, GAME_10US_COMPACT, H_CALL, 0x466DE0, 48,
        0x46725E, GAME_10US_COMPACT, H_CALL, 0x466DE0, 49,
        0x467280, GAME_10US_COMPACT, H_CALL, 0x466DE0, 50,
        0x46728B, GAME_10US_COMPACT, H_CALL, 0x466DE0, 51,
        0x4672AD, GAME_10US_COMPACT, H_CALL, 0x466DE0, 52,
        0x4672B8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 53,
        0x4672C8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 54,
        0x4672D3, GAME_10US_COMPACT, H_CALL, 0x466DE0, 55,
        0x4672F5, GAME_10US_COMPACT, H_CALL, 0x466DE0, 56,
        0x467300, GAME_10US_COMPACT, H_CALL, 0x466DE0, 57,
        0x467322, GAME_10US_COMPACT, H_CALL, 0x466DE0, 58,
        0x46732D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 59,
        0x46733D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 60,
        0x467348, GAME_10US_COMPACT, H_CALL, 0x466DE0, 61,
        0x46736A, GAME_10US_COMPACT, H_CALL, 0x466DE0, 62,
        0x467375, GAME_10US_COMPACT, H_CALL, 0x466DE0, 63,
        0x467397, GAME_10US_COMPACT, H_CALL, 0x466DE0, 64,
        0x4673A2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 65,
        0x4673B7, GAME_10US_COMPACT, H_CALL, 0x466DE0, 66,
        0x4673C2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 67,
        0x4673D2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 68,
        0x4673DD, GAME_10US_COMPACT, H_CALL, 0x466DE0, 69,
        0x4673F2, GAME_10US_COMPACT, H_CALL, 0x466DE0, 70,
        0x4673FD, GAME_10US_COMPACT, H_CALL, 0x466DE0, 71,
        0x46740D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 72,
        0x467418, GAME_10US_COMPACT, H_CALL, 0x466DE0, 73,
        0x46742D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 74,
        0x467438, GAME_10US_COMPACT, H_CALL, 0x466DE0, 75,
        0x467448, GAME_10US_COMPACT, H_CALL, 0x466DE0, 76,
        0x467453, GAME_10US_COMPACT, H_CALL, 0x466DE0, 77,
        0x467468, GAME_10US_COMPACT, H_CALL, 0x466DE0, 78,
        0x467473, GAME_10US_COMPACT, H_CALL, 0x466DE0, 79,
        0x467483, GAME_10US_COMPACT, H_CALL, 0x466DE0, 80,
        0x4674AF, GAME_10US_COMPACT, H_CALL, 0x466DE0, 81,
        0x4674E8, GAME_10US_COMPACT, H_CALL, 0x466DE0, 82,
        0x46752C, GAME_10US_COMPACT, H_CALL, 0x466DE0, 83,
        0x46BC4D, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46C386, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x470F20, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x470F3F, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x472514, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x47251F, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x47253E, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x472549, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x475278, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x4752A6, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x4752D0, GAME_10US_COMPACT, H_CALL, 0x474900, 3,
        0x475300, GAME_10US_COMPACT, H_CALL, 0x474900, 4,
        0x475EF2, GAME_10US_COMPACT, H_CALL, 0x474900, 5,
        0x4760B3, GAME_10US_COMPACT, H_CALL, 0x474900, 6,
        0x4768D9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1,
        0x4775D4, GAME_10US_COMPACT, H_CALL, 0x4762D0, 2,
        0x478C8D, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x478C98, GAME_10US_COMPACT, H_CALL, 0x478000, 2,
        0x478CE5, GAME_10US_COMPACT, H_CALL, 0x478000, 3,
        0x48B0E0, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48B104, GAME_10US_COMPACT, H_CALL, 0x48A320, 2,
        0x48B3B5, GAME_10US_COMPACT, H_CALL, 0x48A320, 3,
        0x48B3DF, GAME_10US_COMPACT, H_CALL, 0x48A320, 4,
        0x48B5E8, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48B618, GAME_10US_COMPACT, H_CALL, 0x48B590, 2,
        0x48B651, GAME_10US_COMPACT, H_CALL, 0x48B590, 3,
        0x48B67F, GAME_10US_COMPACT, H_CALL, 0x48B590, 4,
        0x48B6A4, GAME_10US_COMPACT, H_CALL, 0x48B590, 5,
        0x48B6D4, GAME_10US_COMPACT, H_CALL, 0x48B590, 6,
        0x48B70B, GAME_10US_COMPACT, H_CALL, 0x48B590, 7,
        0x48B739, GAME_10US_COMPACT, H_CALL, 0x48B590, 8,
        0x48F783, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48F7B9, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48F7F3, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x497DEC, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x497E22, GAME_10US_COMPACT, H_CALL, 0x496E00, 2>;
    using def_t = tScriptParam *(CRunningScript *, unsigned char);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,unsigned char>, 0,1>;
META_END

META_BEGIN(CRunningScript::Init)
    static int address;
    static int global_address;
    static const int id = 0x4648E0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x4648E0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x464C4A, GAME_10US_COMPACT, H_CALL, 0x464C20, 1,
        0x464CE2, GAME_10US_COMPACT, H_CALL, 0x464C90, 1,
        0x468D82, GAME_10US_COMPACT, H_CALL, 0x468D50, 1>;
    using def_t = void(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::RemoveScriptFromList)
    static int address;
    static int global_address;
    static const int id = 0x464BD0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464BD0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4667F3, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x474D38, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x48A588, GAME_10US_COMPACT, H_CALL, 0x48A320, 1>;
    using def_t = void(CRunningScript *, CRunningScript **);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,CRunningScript **>, 0,1>;
META_END

META_BEGIN(CRunningScript::AddScriptToList)
    static int address;
    static int global_address;
    static const int id = 0x464C00;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464C00, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4667FF, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x474D44, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x48A594, GAME_10US_COMPACT, H_CALL, 0x48A320, 1>;
    using def_t = void(CRunningScript *, CRunningScript **);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,CRunningScript **>, 0,1>;
META_END

META_BEGIN(CRunningScript::IsPedDead)
    static int address;
    static int global_address;
    static const int id = 0x464D70;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464D70, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x469B34, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x46E1FF, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x474A9C, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x475A63, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x47A3C9, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x4803AE, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1>;
    using def_t = bool(CRunningScript *, CPed *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,CPed *>, 0,1>;
META_END

META_BEGIN(CRunningScript::UpdatePC)
    static int address;
    static int global_address;
    static const int id = 0x464DA0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464DA0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x465ED1, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x4667C1, GAME_10US_COMPACT, H_CALL, 0x465E60, 2,
        0x466880, GAME_10US_COMPACT, H_CALL, 0x465E60, 3,
        0x47183D, GAME_10US_COMPACT, H_CALL, 0x470A90, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::SetCharCoordinates)
    static int address;
    static int global_address;
    static const int id = 0x464DC0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464DC0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4678AB, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x4753A4, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x4797AA, GAME_10US_COMPACT, H_CALL, 0x478000, 1>;
    using def_t = void(CRunningScript *, CPed *, float, float, float, bool, bool);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,CPed *,float,float,float,bool,bool>, 0,1,2,3,4,5,6>;
META_END

META_BEGIN(CRunningScript::GetCorrectPedModelIndexForEmergencyServiceType)
    static int address;
    static int global_address;
    static const int id = 0x464F50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x464F50, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x467563, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x469C64, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x47D86F, GAME_10US_COMPACT, H_CALL, 0x47D210, 1,
        0x491CB9, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1>;
    using def_t = void(CRunningScript *, ePedType, int *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,ePedType,int *>, 0,1,2>;
META_END

META_BEGIN(CRunningScript::ShutdownThisScript)
    static int address;
    static int global_address;
    static const int id = 0x465AA0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x465AA0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x466804, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x474D4B, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x48A59B, GAME_10US_COMPACT, H_CALL, 0x48A320, 1>;
    using def_t = void(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::GivePedScriptedTask)
    static int address;
    static int global_address;
    static const int id = 0x465C20;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x465C20, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x46B6C8, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46BCBA, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x46BF2D, GAME_10US_COMPACT, H_CALL, 0x46B460, 3,
        0x46BFCC, GAME_10US_COMPACT, H_CALL, 0x46B460, 4,
        0x46C19B, GAME_10US_COMPACT, H_CALL, 0x46B460, 5,
        0x46C609, GAME_10US_COMPACT, H_CALL, 0x46B460, 6,
        0x46C9E6, GAME_10US_COMPACT, H_CALL, 0x46B460, 7,
        0x46CBC6, GAME_10US_COMPACT, H_CALL, 0x46B460, 8,
        0x46D4EE, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x46DA8E, GAME_10US_COMPACT, H_CALL, 0x46D050, 2,
        0x46DB51, GAME_10US_COMPACT, H_CALL, 0x46D050, 3,
        0x46DBDD, GAME_10US_COMPACT, H_CALL, 0x46D050, 4,
        0x46E6F3, GAME_10US_COMPACT, H_CALL, 0x46D050, 5,
        0x46E770, GAME_10US_COMPACT, H_CALL, 0x46D050, 6,
        0x46E90E, GAME_10US_COMPACT, H_CALL, 0x46D050, 7,
        0x46EC37, GAME_10US_COMPACT, H_CALL, 0x46D050, 8,
        0x470356, GAME_10US_COMPACT, H_CALL, 0x470150, 1,
        0x471050, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x47133F, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x472926, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x472B7C, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x4735F1, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x473CA7, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x47404C, GAME_10US_COMPACT, H_CALL, 0x472310, 5,
        0x4740D0, GAME_10US_COMPACT, H_CALL, 0x472310, 6,
        0x474255, GAME_10US_COMPACT, H_CALL, 0x472310, 7,
        0x474E0E, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x479050, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x479FF1, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x47BC5D, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x48C345, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48FB58, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48FB76, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48FBE9, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x48FC31, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 4,
        0x48FC70, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 5,
        0x48FC91, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 6,
        0x48FD3E, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 7,
        0x48FDE5, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 8,
        0x48FE03, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 9,
        0x49045F, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 10,
        0x490756, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 11,
        0x4908FF, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 12,
        0x490975, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 13,
        0x490A49, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 14,
        0x490B72, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 15,
        0x490C06, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 16,
        0x490EEB, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x4927C7, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x492AA0, GAME_10US_COMPACT, H_CALL, 0x490DB0, 3,
        0x4948E3, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x4949D3, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x4949ED, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x494E28, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x494F79, GAME_10US_COMPACT, H_CALL, 0x493FE0, 5,
        0x49505A, GAME_10US_COMPACT, H_CALL, 0x493FE0, 6,
        0x49598A, GAME_10US_COMPACT, H_CALL, 0x493FE0, 7,
        0x495A20, GAME_10US_COMPACT, H_CALL, 0x493FE0, 8,
        0x496EAF, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x497071, GAME_10US_COMPACT, H_CALL, 0x496E00, 2,
        0x497438, GAME_10US_COMPACT, H_CALL, 0x496E00, 3,
        0x497763, GAME_10US_COMPACT, H_CALL, 0x496E00, 4,
        0x497CCF, GAME_10US_COMPACT, H_CALL, 0x496E00, 5,
        0x4981B2, GAME_10US_COMPACT, H_CALL, 0x496E00, 6,
        0x49824D, GAME_10US_COMPACT, H_CALL, 0x496E00, 7,
        0x4982E3, GAME_10US_COMPACT, H_CALL, 0x496E00, 8>;
    using def_t = void(CRunningScript *, int, CTask *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int,CTask *,int>, 0,1,2,3>;
META_END

META_BEGIN(CRunningScript::ProcessCommands0To99)
    static int address;
    static int global_address;
    static const int id = 0x465E60;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x465E60, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x469EF5, GAME_10US_COMPACT, H_CALL, 0x469EB0, 1,
        0x469FF5, GAME_10US_COMPACT, H_CALL, 0x469F00, 1,
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands100To199)
    static int address;
    static int global_address;
    static const int id = 0x466DE0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x466DE0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands200To299)
    static int address;
    static int global_address;
    static const int id = 0x469390;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x469390, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessOneCommand)
    static int address;
    static int global_address;
    static const int id = 0x469EB0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x469EB0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<>;
    using def_t = void(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::Process)
    static int address;
    static int global_address;
    static const int id = 0x469F00;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x469F00, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x46A21B, GAME_10US_COMPACT, H_CALL, 0x46A000, 1>;
    using def_t = void(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::ScriptTaskPickUpObject)
    static int address;
    static int global_address;
    static const int id = 0x46AF50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x46AF50, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x46D169, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x47905F, GAME_10US_COMPACT, H_CALL, 0x478000, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1900To1999)
    static int address;
    static int global_address;
    static const int id = 0x46B460;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x46B460, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1800To1899)
    static int address;
    static int global_address;
    static const int id = 0x46D050;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x46D050, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::PlayAnimScriptCommand)
    static int address;
    static int global_address;
    static const int id = 0x470150;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x470150, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x471E0F, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x473834, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x47BB0B, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x4913F8, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2100To2199)
    static int address;
    static int global_address;
    static const int id = 0x470A90;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x470A90, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2000To2099)
    static int address;
    static int global_address;
    static const int id = 0x472310;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x472310, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2200To2299)
    static int address;
    static int global_address;
    static const int id = 0x474900;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x474900, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2300To2399)
    static int address;
    static int global_address;
    static const int id = 0x4762D0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x4762D0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2400To2499)
    static int address;
    static int global_address;
    static const int id = 0x478000;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x478000, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2600To2699)
    static int address;
    static int global_address;
    static const int id = 0x479DA0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x479DA0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands2500To2599)
    static int address;
    static int global_address;
    static const int id = 0x47A760;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47A760, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands300To399)
    static int address;
    static int global_address;
    static const int id = 0x47C100;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47C100, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands400To499)
    static int address;
    static int global_address;
    static const int id = 0x47D210;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47D210, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands500To599)
    static int address;
    static int global_address;
    static const int id = 0x47E090;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47E090, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands600To699)
    static int address;
    static int global_address;
    static const int id = 0x47F370;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47F370, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands700To799)
    static int address;
    static int global_address;
    static const int id = 0x47FA30;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x47FA30, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands800To899)
    static int address;
    static int global_address;
    static const int id = 0x481300;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x481300, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands900To999)
    static int address;
    static int global_address;
    static const int id = 0x483BD0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x483BD0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::UpdateCompareFlag)
    static int address;
    static int global_address;
    static const int id = 0x4859D0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x4859D0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4661F6, GAME_10US_COMPACT, H_CALL, 0x465E60, 1,
        0x466234, GAME_10US_COMPACT, H_CALL, 0x465E60, 2,
        0x46626E, GAME_10US_COMPACT, H_CALL, 0x465E60, 3,
        0x4662A8, GAME_10US_COMPACT, H_CALL, 0x465E60, 4,
        0x4662E2, GAME_10US_COMPACT, H_CALL, 0x465E60, 5,
        0x467951, GAME_10US_COMPACT, H_CALL, 0x466DE0, 1,
        0x467A4D, GAME_10US_COMPACT, H_CALL, 0x466DE0, 2,
        0x467F68, GAME_10US_COMPACT, H_CALL, 0x466DE0, 3,
        0x468019, GAME_10US_COMPACT, H_CALL, 0x466DE0, 4,
        0x468335, GAME_10US_COMPACT, H_CALL, 0x466DE0, 5,
        0x469602, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x46965B, GAME_10US_COMPACT, H_CALL, 0x469390, 2,
        0x4696AC, GAME_10US_COMPACT, H_CALL, 0x469390, 3,
        0x469709, GAME_10US_COMPACT, H_CALL, 0x469390, 4,
        0x46997E, GAME_10US_COMPACT, H_CALL, 0x469390, 5,
        0x469A46, GAME_10US_COMPACT, H_CALL, 0x469390, 6,
        0x469B07, GAME_10US_COMPACT, H_CALL, 0x469390, 7,
        0x469B49, GAME_10US_COMPACT, H_CALL, 0x469390, 8,
        0x469B61, GAME_10US_COMPACT, H_CALL, 0x469390, 9,
        0x469BAD, GAME_10US_COMPACT, H_CALL, 0x469390, 10,
        0x469BC5, GAME_10US_COMPACT, H_CALL, 0x469390, 11,
        0x469C16, GAME_10US_COMPACT, H_CALL, 0x469390, 12,
        0x469C2E, GAME_10US_COMPACT, H_CALL, 0x469390, 13,
        0x46B58B, GAME_10US_COMPACT, H_CALL, 0x46B460, 1,
        0x46C222, GAME_10US_COMPACT, H_CALL, 0x46B460, 2,
        0x46C2A3, GAME_10US_COMPACT, H_CALL, 0x46B460, 3,
        0x46D652, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x46D6E8, GAME_10US_COMPACT, H_CALL, 0x46D050, 2,
        0x46DE02, GAME_10US_COMPACT, H_CALL, 0x46D050, 3,
        0x46DF6E, GAME_10US_COMPACT, H_CALL, 0x46D050, 4,
        0x46E7F6, GAME_10US_COMPACT, H_CALL, 0x46D050, 5,
        0x46EAC3, GAME_10US_COMPACT, H_CALL, 0x46D050, 6,
        0x46EADB, GAME_10US_COMPACT, H_CALL, 0x46D050, 7,
        0x46EB2B, GAME_10US_COMPACT, H_CALL, 0x46D050, 8,
        0x470C00, GAME_10US_COMPACT, H_CALL, 0x470A90, 1,
        0x470F67, GAME_10US_COMPACT, H_CALL, 0x470A90, 2,
        0x47214F, GAME_10US_COMPACT, H_CALL, 0x470A90, 3,
        0x47252E, GAME_10US_COMPACT, H_CALL, 0x472310, 1,
        0x47256A, GAME_10US_COMPACT, H_CALL, 0x472310, 2,
        0x472BC4, GAME_10US_COMPACT, H_CALL, 0x472310, 3,
        0x472D87, GAME_10US_COMPACT, H_CALL, 0x472310, 4,
        0x472DE6, GAME_10US_COMPACT, H_CALL, 0x472310, 5,
        0x473201, GAME_10US_COMPACT, H_CALL, 0x472310, 6,
        0x47331C, GAME_10US_COMPACT, H_CALL, 0x472310, 7,
        0x47339A, GAME_10US_COMPACT, H_CALL, 0x472310, 8,
        0x473ED5, GAME_10US_COMPACT, H_CALL, 0x472310, 9,
        0x473F0D, GAME_10US_COMPACT, H_CALL, 0x472310, 10,
        0x473F46, GAME_10US_COMPACT, H_CALL, 0x472310, 11,
        0x474319, GAME_10US_COMPACT, H_CALL, 0x472310, 12,
        0x474369, GAME_10US_COMPACT, H_CALL, 0x472310, 13,
        0x4749AF, GAME_10US_COMPACT, H_CALL, 0x474900, 1,
        0x474E1F, GAME_10US_COMPACT, H_CALL, 0x474900, 2,
        0x474E37, GAME_10US_COMPACT, H_CALL, 0x474900, 3,
        0x474FCD, GAME_10US_COMPACT, H_CALL, 0x474900, 4,
        0x475268, GAME_10US_COMPACT, H_CALL, 0x474900, 5,
        0x47546E, GAME_10US_COMPACT, H_CALL, 0x474900, 6,
        0x4760F3, GAME_10US_COMPACT, H_CALL, 0x474900, 7,
        0x476333, GAME_10US_COMPACT, H_CALL, 0x4762D0, 1,
        0x4763A8, GAME_10US_COMPACT, H_CALL, 0x4762D0, 2,
        0x476F6A, GAME_10US_COMPACT, H_CALL, 0x4762D0, 3,
        0x476F8A, GAME_10US_COMPACT, H_CALL, 0x4762D0, 4,
        0x4773E5, GAME_10US_COMPACT, H_CALL, 0x4762D0, 5,
        0x4776F0, GAME_10US_COMPACT, H_CALL, 0x4762D0, 6,
        0x4779D9, GAME_10US_COMPACT, H_CALL, 0x4762D0, 7,
        0x477AD2, GAME_10US_COMPACT, H_CALL, 0x4762D0, 8,
        0x4781D5, GAME_10US_COMPACT, H_CALL, 0x478000, 1,
        0x4782CD, GAME_10US_COMPACT, H_CALL, 0x478000, 2,
        0x478528, GAME_10US_COMPACT, H_CALL, 0x478000, 3,
        0x478575, GAME_10US_COMPACT, H_CALL, 0x478000, 4,
        0x4785F9, GAME_10US_COMPACT, H_CALL, 0x478000, 5,
        0x478663, GAME_10US_COMPACT, H_CALL, 0x478000, 6,
        0x478752, GAME_10US_COMPACT, H_CALL, 0x478000, 7,
        0x47897C, GAME_10US_COMPACT, H_CALL, 0x478000, 8,
        0x478FA6, GAME_10US_COMPACT, H_CALL, 0x478000, 9,
        0x4793F5, GAME_10US_COMPACT, H_CALL, 0x478000, 10,
        0x479768, GAME_10US_COMPACT, H_CALL, 0x478000, 11,
        0x47980B, GAME_10US_COMPACT, H_CALL, 0x478000, 12,
        0x479AD3, GAME_10US_COMPACT, H_CALL, 0x478000, 13,
        0x479E69, GAME_10US_COMPACT, H_CALL, 0x479DA0, 1,
        0x479EE4, GAME_10US_COMPACT, H_CALL, 0x479DA0, 2,
        0x479EFB, GAME_10US_COMPACT, H_CALL, 0x479DA0, 3,
        0x47A0C8, GAME_10US_COMPACT, H_CALL, 0x479DA0, 4,
        0x47A1A5, GAME_10US_COMPACT, H_CALL, 0x479DA0, 5,
        0x47A22F, GAME_10US_COMPACT, H_CALL, 0x479DA0, 6,
        0x47A663, GAME_10US_COMPACT, H_CALL, 0x479DA0, 7,
        0x47A686, GAME_10US_COMPACT, H_CALL, 0x479DA0, 8,
        0x47A693, GAME_10US_COMPACT, H_CALL, 0x479DA0, 9,
        0x47A814, GAME_10US_COMPACT, H_CALL, 0x47A760, 1,
        0x47A874, GAME_10US_COMPACT, H_CALL, 0x47A760, 2,
        0x47A9F5, GAME_10US_COMPACT, H_CALL, 0x47A760, 3,
        0x47AA3D, GAME_10US_COMPACT, H_CALL, 0x47A760, 4,
        0x47AADF, GAME_10US_COMPACT, H_CALL, 0x47A760, 5,
        0x47AB14, GAME_10US_COMPACT, H_CALL, 0x47A760, 6,
        0x47AD04, GAME_10US_COMPACT, H_CALL, 0x47A760, 7,
        0x47B000, GAME_10US_COMPACT, H_CALL, 0x47A760, 8,
        0x47B139, GAME_10US_COMPACT, H_CALL, 0x47A760, 9,
        0x47B2B0, GAME_10US_COMPACT, H_CALL, 0x47A760, 10,
        0x47B4E0, GAME_10US_COMPACT, H_CALL, 0x47A760, 11,
        0x47B537, GAME_10US_COMPACT, H_CALL, 0x47A760, 12,
        0x47B68C, GAME_10US_COMPACT, H_CALL, 0x47A760, 13,
        0x47B882, GAME_10US_COMPACT, H_CALL, 0x47A760, 14,
        0x47B8C2, GAME_10US_COMPACT, H_CALL, 0x47A760, 15,
        0x47B9EF, GAME_10US_COMPACT, H_CALL, 0x47A760, 16,
        0x47BBAA, GAME_10US_COMPACT, H_CALL, 0x47A760, 17,
        0x47C15A, GAME_10US_COMPACT, H_CALL, 0x47C100, 1,
        0x47C3EA, GAME_10US_COMPACT, H_CALL, 0x47C100, 2,
        0x47C84B, GAME_10US_COMPACT, H_CALL, 0x47C100, 3,
        0x47CE62, GAME_10US_COMPACT, H_CALL, 0x47C100, 4,
        0x47CEB0, GAME_10US_COMPACT, H_CALL, 0x47C100, 5,
        0x47D0DB, GAME_10US_COMPACT, H_CALL, 0x47C100, 6,
        0x47D706, GAME_10US_COMPACT, H_CALL, 0x47D210, 1,
        0x47DF25, GAME_10US_COMPACT, H_CALL, 0x47D210, 2,
        0x47E135, GAME_10US_COMPACT, H_CALL, 0x47E090, 1,
        0x47E55F, GAME_10US_COMPACT, H_CALL, 0x47E090, 2,
        0x47E690, GAME_10US_COMPACT, H_CALL, 0x47E090, 3,
        0x47EE68, GAME_10US_COMPACT, H_CALL, 0x47E090, 4,
        0x47F023, GAME_10US_COMPACT, H_CALL, 0x47E090, 5,
        0x47F21A, GAME_10US_COMPACT, H_CALL, 0x47E090, 6,
        0x47F673, GAME_10US_COMPACT, H_CALL, 0x47F370, 1,
        0x47FAD2, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1,
        0x47FBCA, GAME_10US_COMPACT, H_CALL, 0x47FA30, 2,
        0x4801A3, GAME_10US_COMPACT, H_CALL, 0x47FA30, 3,
        0x480556, GAME_10US_COMPACT, H_CALL, 0x47FA30, 4,
        0x480776, GAME_10US_COMPACT, H_CALL, 0x47FA30, 5,
        0x4808D8, GAME_10US_COMPACT, H_CALL, 0x47FA30, 6,
        0x480E76, GAME_10US_COMPACT, H_CALL, 0x47FA30, 7,
        0x480EEC, GAME_10US_COMPACT, H_CALL, 0x47FA30, 8,
        0x4819FE, GAME_10US_COMPACT, H_CALL, 0x481300, 1,
        0x48232F, GAME_10US_COMPACT, H_CALL, 0x481300, 2,
        0x4823CE, GAME_10US_COMPACT, H_CALL, 0x481300, 3,
        0x482A8C, GAME_10US_COMPACT, H_CALL, 0x481300, 4,
        0x4831EE, GAME_10US_COMPACT, H_CALL, 0x481300, 5,
        0x48322F, GAME_10US_COMPACT, H_CALL, 0x481300, 6,
        0x483DCF, GAME_10US_COMPACT, H_CALL, 0x483BD0, 1,
        0x484695, GAME_10US_COMPACT, H_CALL, 0x483BD0, 2,
        0x485093, GAME_10US_COMPACT, H_CALL, 0x483BD0, 3,
        0x48518F, GAME_10US_COMPACT, H_CALL, 0x483BD0, 4,
        0x4851F7, GAME_10US_COMPACT, H_CALL, 0x483BD0, 5,
        0x485255, GAME_10US_COMPACT, H_CALL, 0x483BD0, 6,
        0x485373, GAME_10US_COMPACT, H_CALL, 0x483BD0, 7,
        0x4854AD, GAME_10US_COMPACT, H_CALL, 0x483BD0, 8,
        0x486FC2, GAME_10US_COMPACT, H_CALL, 0x486D80, 1,
        0x487334, GAME_10US_COMPACT, H_CALL, 0x4870F0, 1,
        0x487642, GAME_10US_COMPACT, H_CALL, 0x487420, 1,
        0x487942, GAME_10US_COMPACT, H_CALL, 0x487720, 1,
        0x487C20, GAME_10US_COMPACT, H_CALL, 0x487A20, 1,
        0x487EA4, GAME_10US_COMPACT, H_CALL, 0x487D10, 1,
        0x488300, GAME_10US_COMPACT, H_CALL, 0x487F60, 1,
        0x4886DD, GAME_10US_COMPACT, H_CALL, 0x4883F0, 1,
        0x488AA2, GAME_10US_COMPACT, H_CALL, 0x488780, 1,
        0x488E1A, GAME_10US_COMPACT, H_CALL, 0x488B50, 1,
        0x4890BF, GAME_10US_COMPACT, H_CALL, 0x488EC0, 1,
        0x489326, GAME_10US_COMPACT, H_CALL, 0x489150, 1,
        0x4895C5, GAME_10US_COMPACT, H_CALL, 0x489500, 1,
        0x489C00, GAME_10US_COMPACT, H_CALL, 0x489500, 2,
        0x489C0E, GAME_10US_COMPACT, H_CALL, 0x489500, 3,
        0x489F88, GAME_10US_COMPACT, H_CALL, 0x489500, 4,
        0x48A017, GAME_10US_COMPACT, H_CALL, 0x489500, 5,
        0x48A0F6, GAME_10US_COMPACT, H_CALL, 0x489500, 6,
        0x48A16B, GAME_10US_COMPACT, H_CALL, 0x489500, 7,
        0x48A1DD, GAME_10US_COMPACT, H_CALL, 0x489500, 8,
        0x48A495, GAME_10US_COMPACT, H_CALL, 0x48A320, 1,
        0x48ABC6, GAME_10US_COMPACT, H_CALL, 0x48A320, 2,
        0x48AC7F, GAME_10US_COMPACT, H_CALL, 0x48A320, 3,
        0x48ACB9, GAME_10US_COMPACT, H_CALL, 0x48A320, 4,
        0x48AE55, GAME_10US_COMPACT, H_CALL, 0x48A320, 5,
        0x48AFA7, GAME_10US_COMPACT, H_CALL, 0x48A320, 6,
        0x48B124, GAME_10US_COMPACT, H_CALL, 0x48A320, 7,
        0x48B2F6, GAME_10US_COMPACT, H_CALL, 0x48A320, 8,
        0x48B351, GAME_10US_COMPACT, H_CALL, 0x48A320, 9,
        0x48B39D, GAME_10US_COMPACT, H_CALL, 0x48A320, 10,
        0x48B608, GAME_10US_COMPACT, H_CALL, 0x48B590, 1,
        0x48B638, GAME_10US_COMPACT, H_CALL, 0x48B590, 2,
        0x48B666, GAME_10US_COMPACT, H_CALL, 0x48B590, 3,
        0x48B694, GAME_10US_COMPACT, H_CALL, 0x48B590, 4,
        0x48B6C4, GAME_10US_COMPACT, H_CALL, 0x48B590, 5,
        0x48B6F2, GAME_10US_COMPACT, H_CALL, 0x48B590, 6,
        0x48B720, GAME_10US_COMPACT, H_CALL, 0x48B590, 7,
        0x48B74E, GAME_10US_COMPACT, H_CALL, 0x48B590, 8,
        0x48B8F4, GAME_10US_COMPACT, H_CALL, 0x48B590, 9,
        0x48BB9A, GAME_10US_COMPACT, H_CALL, 0x48B590, 10,
        0x48BBFE, GAME_10US_COMPACT, H_CALL, 0x48B590, 11,
        0x48C0FD, GAME_10US_COMPACT, H_CALL, 0x48B590, 12,
        0x48C2DD, GAME_10US_COMPACT, H_CALL, 0x48B590, 13,
        0x48C3C9, GAME_10US_COMPACT, H_CALL, 0x48B590, 14,
        0x48C450, GAME_10US_COMPACT, H_CALL, 0x48B590, 15,
        0x48C491, GAME_10US_COMPACT, H_CALL, 0x48B590, 16,
        0x48C826, GAME_10US_COMPACT, H_CALL, 0x48B590, 17,
        0x48D07E, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 1,
        0x48DAA4, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 2,
        0x48DAE8, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 3,
        0x48DB2C, GAME_10US_COMPACT, H_CALL, 0x48CDD0, 4,
        0x48EBE8, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 1,
        0x48EE46, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 2,
        0x48EE84, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 3,
        0x48F071, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 4,
        0x48F296, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 5,
        0x48F455, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 6,
        0x48FAC4, GAME_10US_COMPACT, H_CALL, 0x48EAA0, 7,
        0x4912E8, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1,
        0x49171B, GAME_10US_COMPACT, H_CALL, 0x490DB0, 2,
        0x494079, GAME_10US_COMPACT, H_CALL, 0x493FE0, 1,
        0x4940A1, GAME_10US_COMPACT, H_CALL, 0x493FE0, 2,
        0x49570D, GAME_10US_COMPACT, H_CALL, 0x493FE0, 3,
        0x495753, GAME_10US_COMPACT, H_CALL, 0x493FE0, 4,
        0x4971C5, GAME_10US_COMPACT, H_CALL, 0x496E00, 1,
        0x49758C, GAME_10US_COMPACT, H_CALL, 0x496E00, 2,
        0x497696, GAME_10US_COMPACT, H_CALL, 0x496E00, 3,
        0x4976BC, GAME_10US_COMPACT, H_CALL, 0x496E00, 4,
        0x4978FC, GAME_10US_COMPACT, H_CALL, 0x496E00, 5,
        0x4987F5, GAME_10US_COMPACT, H_CALL, 0x496E00, 6,
        0x498A20, GAME_10US_COMPACT, H_CALL, 0x496E00, 7,
        0x498A7A, GAME_10US_COMPACT, H_CALL, 0x496E00, 8,
        0x498BC3, GAME_10US_COMPACT, H_CALL, 0x496E00, 9>;
    using def_t = void(CRunningScript *, bool);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,bool>, 0,1>;
META_END

META_BEGIN(CRunningScript::DoDeatharrestCheck)
    static int address;
    static int global_address;
    static const int id = 0x485A50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x485A50, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x469F5B, GAME_10US_COMPACT, H_CALL, 0x469F00, 1>;
    using def_t = void(CRunningScript *);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *>, 0>;
META_END

META_BEGIN(CRunningScript::GetPadState)
    static int address;
    static int global_address;
    static const int id = 0x485B10;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x485B10, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4696D6, GAME_10US_COMPACT, H_CALL, 0x469390, 1,
        0x469733, GAME_10US_COMPACT, H_CALL, 0x469390, 2>;
    using def_t = short(CRunningScript *, unsigned short, unsigned short);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,unsigned short,unsigned short>, 0,1,2>;
META_END

META_BEGIN(CRunningScript::LocateCharCommand)
    static int address;
    static int global_address;
    static const int id = 0x486D80;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x486D80, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x469754, GAME_10US_COMPACT, H_CALL, 0x469390, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::LocateCharCharCommand)
    static int address;
    static int global_address;
    static const int id = 0x4870F0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x4870F0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x469763, GAME_10US_COMPACT, H_CALL, 0x469390, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::LocateCharCarCommand)
    static int address;
    static int global_address;
    static const int id = 0x487420;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x487420, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x47E36A, GAME_10US_COMPACT, H_CALL, 0x47E090, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::LocateCharObjectCommand)
    static int address;
    static int global_address;
    static const int id = 0x487720;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x487720, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x48AB1C, GAME_10US_COMPACT, H_CALL, 0x48A320, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::LocateCarCommand)
    static int address;
    static int global_address;
    static const int id = 0x487A20;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x487A20, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x47D2EC, GAME_10US_COMPACT, H_CALL, 0x47D210, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::LocateObjectCommand)
    static int address;
    static int global_address;
    static const int id = 0x487D10;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x487D10, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x48C292, GAME_10US_COMPACT, H_CALL, 0x48B590, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::CharInAngledAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x487F60;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x487F60, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x49128C, GAME_10US_COMPACT, H_CALL, 0x490DB0, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ObjectInAngledAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x4883F0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x4883F0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x4759BF, GAME_10US_COMPACT, H_CALL, 0x474900, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::FlameInAngledAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x488780;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x488780, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x46DC20, GAME_10US_COMPACT, H_CALL, 0x46D050, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::CharInAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x488B50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x488B50, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x47D2B0, GAME_10US_COMPACT, H_CALL, 0x47D210, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::CarInAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x488EC0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x488EC0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x47D2CE, GAME_10US_COMPACT, H_CALL, 0x47D210, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ObjectInAreaCheckCommand)
    static int address;
    static int global_address;
    static const int id = 0x489150;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x489150, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x48C2EC, GAME_10US_COMPACT, H_CALL, 0x48B590, 1>;
    using def_t = void(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ThisIsAValidRandomPed)
    static int address;
    static int global_address;
    static const int id = 0x489490;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x489490, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x46E22A, GAME_10US_COMPACT, H_CALL, 0x46D050, 1,
        0x4803F6, GAME_10US_COMPACT, H_CALL, 0x47FA30, 1>;
    using def_t = bool(CRunningScript *, ePedType, bool, bool, bool);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,ePedType,bool,bool,bool>, 0,1,2,3,4>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1000To1099)
    static int address;
    static int global_address;
    static const int id = 0x489500;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x489500, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1100To1199)
    static int address;
    static int global_address;
    static const int id = 0x48A320;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48A320, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1200To1299)
    static int address;
    static int global_address;
    static const int id = 0x48B590;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48B590, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1300To1399)
    static int address;
    static int global_address;
    static const int id = 0x48CDD0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CDD0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1400To1499)
    static int address;
    static int global_address;
    static const int id = 0x48EAA0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48EAA0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1500To1599)
    static int address;
    static int global_address;
    static const int id = 0x490DB0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x490DB0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1600To1699)
    static int address;
    static int global_address;
    static const int id = 0x493FE0;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x493FE0, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

META_BEGIN(CRunningScript::ProcessCommands1700To1799)
    static int address;
    static int global_address;
    static const int id = 0x496E00;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x496E00, 0, 0, 0, 0, 0>;
    using refs_t = RefList<
        0x8A6168, GAME_10US_COMPACT, H_CALLBACK, 0, 1>;
    using def_t = char(CRunningScript *, int);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Thiscall;
    using args_t = ArgPick<ArgTypes<CRunningScript *,int>, 0,1>;
META_END

}
